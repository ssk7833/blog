<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[北風筆記]]></title>
  <subtitle><![CDATA[紀錄一些學習心得、過程及日常]]></subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  <link href="http://ssk7833.github.io/blog/"/>
  <updated>2016-01-05T10:02:43.106Z</updated>
  <id>http://ssk7833.github.io/blog/</id>
  
  <author>
    <name><![CDATA[North]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Facebook Graph API 取得大頭貼照]]></title>
    <link href="http://ssk7833.github.io/blog/2015/08/24/facebook-graph-api-get-picture/"/>
    <id>http://ssk7833.github.io/blog/2015/08/24/facebook-graph-api-get-picture/</id>
    <published>2015-08-24T19:11:56.000Z</published>
    <updated>2016-01-05T10:02:43.106Z</updated>
    <content type="html"><![CDATA[<p>要取得大頭貼照，如果使用 API request ，加上 picture 即可得到大頭貼照，如：<code>me?fields=id,name,picture</code>，即可在回傳的 JSON 中取得圖片的位址，但這時取回來的圖片會比正常大小還要小，而且此方法還需要 access_token。</p>
<p>要取得不同大小的大頭貼照，有個更輕鬆的方法：<code>http://graph.facebook.com/{id}/picture?type=normal</code> 直接使用此網址，將 id 換成想呈現的 userId 即可，此網址將會 redirect 到對應的圖片位址，且此方法不需要 access_token。</p>
<p>在這個網址中，type 可為 <code>small</code>, <code>normal</code>, <code>album</code>, <code>large</code>, <code>square</code>，分別為不同解析度的照片大小。</p>
<p>以 Facebook 的創始人 Mark Zuckerberg 為例，userId 為 4，則要顯示的網址如下：<br>50*50:<br><code>http://graph.facebook.com/4/picture?type=small</code><br><img src="http://graph.facebook.com/4/picture?type=small" alt="Small" title="Mark Zuckerberg"><br><code>http://graph.facebook.com/4/picture?type=album</code><br><img src="http://graph.facebook.com/4/picture?type=album" alt="Album" title="Mark Zuckerberg"><br><code>http://graph.facebook.com/4/picture?type=square</code><br><img src="http://graph.facebook.com/4/picture?type=square" alt="Square" title="Mark Zuckerberg"></p>
<p>100*100:<br><code>http://graph.facebook.com/4/picture?type=normal</code><br><img src="http://graph.facebook.com/4/picture?type=normal" alt="Normal" title="Mark Zuckerberg"></p>
<p>200*200:<br><code>http://graph.facebook.com/4/picture?type=large</code><br><img src="http://graph.facebook.com/4/picture?type=large" alt="Large" title="Mark Zuckerberg"></p>
<p>不能理解的是為什麼 small, album, square 所得到的大小都一樣，還不知道差在哪。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>要取得大頭貼照，如果使用 API request ，加上 picture 即可得到大頭貼照，如：<code>me?fields=id,name,picture</code>，即可在回傳的 JSON 中取得圖片的位址，但這時取回來的圖片會比正常大小還要小，而且此方法還需要 a]]>
    </summary>
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Facebook-Graph-API" scheme="http://ssk7833.github.io/blog/tags/Facebook-Graph-API/"/>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Facebook Graph API 回傳指定語言姓名(Language-specific name)]]></title>
    <link href="http://ssk7833.github.io/blog/2015/07/12/facebook-graph-api-returns-language-specific-name/"/>
    <id>http://ssk7833.github.io/blog/2015/07/12/facebook-graph-api-returns-language-specific-name/</id>
    <published>2015-07-12T10:49:43.000Z</published>
    <updated>2016-01-05T10:02:43.106Z</updated>
    <content type="html"><![CDATA[<p>玩 Facebook Graph API 玩了一陣子才發現回傳的姓名總是是英文的，才想到若是有回傳中文姓名的需求時該怎麼辦，如此下去一找才發現關鍵字是 <a href="https://www.facebook.com/help/217868321565724" target="_blank" rel="external">Language-specific name</a>，而要如何在 Facebook Graph API 中顯示為中文則可以參考這篇中的 locale：<a href="https://developers.facebook.com/docs/graph-api/using-graph-api/v2.0#readmodifiers" target="_blank" rel="external">Modifying API Requests</a>。</p>
<p>其實只要在 API request 中加上 <code>&amp;locale=zh_TW</code> 即可得到中文姓名，如：<code>me?fields=id,name&amp;locale=zh_TW</code>，只是有趣的是我稍微測了一下 locale 給以開頭 <code>en_</code> 以外的任何值都會取得中文名稱，還以為預設會以英文為主。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>玩 Facebook Graph API 玩了一陣子才發現回傳的姓名總是是英文的，才想到若是有回傳中文姓名的需求時該怎麼辦，如此下去一找才發現關鍵字是 <a href="https://www.facebook.com/help/217868321565724" targe]]>
    </summary>
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Facebook-Graph-API" scheme="http://ssk7833.github.io/blog/tags/Facebook-Graph-API/"/>
    
      <category term="localization" scheme="http://ssk7833.github.io/blog/tags/localization/"/>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Parse.com Cloud Code Hosting 進行 Facebook 登入存取 - 3]]></title>
    <link href="http://ssk7833.github.io/blog/2015/07/01/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-3/"/>
    <id>http://ssk7833.github.io/blog/2015/07/01/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-3/</id>
    <published>2015-07-01T16:11:49.000Z</published>
    <updated>2016-01-05T10:02:43.106Z</updated>
    <content type="html"><![CDATA[<p>繼上一篇成功截取出使用者資料後，發現除了基本資料外，朋友、按讚的資訊等資料其實都抓不出來，原因是因為沒有給予 app 存取這些資訊的權限。要求權限的話可以透過 OAuth 來索取 access token ，其範例網址如下：</p>
<p><code>https://www.facebook.com/dialog/oauth?client_id={appId}&amp;redirect_uri={redirectURI}</code></p>
<p><img src="/blog/images/profile.png" alt="Profile" title="Profile"><br><img src="/blog/images/profile02.png" alt="Profile details" title="Profile Details"></p>
<p>這是一個截取基本權限的網址，appId 指的是每一個 app 獨立的 ID，而 redirectURI 是當 OAuth 通過後，會送發一串 code 到這個 redirectURI 去，而若需要要求其他權限，可以增加 scope 屬性如下：</p>
<p><code>https://www.facebook.com/dialog/oauth?client_id={appId}&amp;redirect_uri={redirectURI}&amp;scope={accessPermissions}</code></p>
<p>這個 scope 以逗號作為分隔，填在裡面的將會在 Facebook dialog 中要求權限。</p>
<p><img src="/blog/images/user_friends.png" alt="Profile with friends" title="Profile with friends"><br><img src="/blog/images/user_friends02.png" alt="Profile with friends details" title="Profile with friends details"></p>
<p>講了這麼多，但以<a href="http://north.logdown.com/posts/280761-using-parsecom-cloud-code-hosting-to-log-in-with-facebook" target="_blank" rel="external">第一篇</a>中使用了<a href="https://github.com/ParsePlatform/parse-facebook-user-session" target="_blank" rel="external">parse-facebook-user-session</a>該怎麼修改呢？稍微翻了它的 source code 後發現它在實作上並沒有保留 scope 欄位，因此我便把 scope 加上去了，可以由此瀏覽：<a href="https://github.com/ssk7833/parse-facebook-user-session" target="_blank" rel="external">parse-facebook-user-session</a><br><strong>UPDATE：</strong>原 repository 已經將此功能 merge上 去，直接使用原本的即可</p>
<p>使用方式的話則與先前的沒什麼差別，只是可以選擇多填一個 scope 欄位，範例如下：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">app</span><span class="class">.use</span>(<span class="function">parseFacebookUserSession</span>(&#123;</span><br><span class="line">  <span class="attribute">clientId</span>: <span class="string">'YOUR_FB_CLIENT_ID'</span>,</span><br><span class="line">  <span class="attribute">appSecret</span>: <span class="string">'YOUR_FB_APP_SECRET'</span>,</span><br><span class="line">  <span class="attribute">redirectUri</span>: <span class="string">'/login'</span>,</span><br><span class="line">  <span class="attribute">scope</span>: <span class="string">'user_friends,user_likes'</span>, <span class="comment">// 要求friends與like資訊</span></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure></p>
<p>至於有哪些權限可以要求，可以當<a href="https://developers.facebook.com/tools/explorer/" target="_blank" rel="external">https://developers.facebook.com/tools/explorer/</a>中，點選 Get Access Token 來參考，並且在下面做測試。</p>
<p>不過要注意的有像是 <code>user_friends</code> 這項，如果在 API v2.0 以上的版本上要求資訊的話，只會列出同樣有授權此 app 的好友出來，開了幾個 test users 測試的確如此：</p>
<p>很可憐沒有朋友授權此 APP：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">id</span>": <span class="value"><span class="string">"104342733239984"</span></span>,</span><br><span class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"Hello world"</span></span>,</span><br><span class="line">  "<span class="attribute">friends</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">data</span>": <span class="value">[]</span>,</span><br><span class="line">    "<span class="attribute">summary</span>": <span class="value">&#123;</span><br><span class="line">      "<span class="attribute">total_count</span>": <span class="value"><span class="number">1</span></span><br><span class="line">    </span>&#125;</span><br><span class="line">  </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>可以看到 summary 中，total_count 為 1，但 data 中無資料。</p>
<p>有朋友也授權此 APP：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">id</span>": <span class="value"><span class="string">"1421116644879628"</span></span>,</span><br><span class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"Doraemon Cat"</span></span>,</span><br><span class="line">  "<span class="attribute">friends</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">data</span>": <span class="value">[</span><br><span class="line">      &#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"Open Graph Test User"</span></span>,</span><br><span class="line">        "<span class="attribute">id</span>": <span class="value"><span class="string">"1414470195545509"</span></span><br><span class="line">      </span>&#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        "<span class="attribute">name</span>": <span class="value"><span class="string">"Monkey D Luffy"</span></span>,</span><br><span class="line">        "<span class="attribute">id</span>": <span class="value"><span class="string">"100347703641647"</span></span><br><span class="line">      </span>&#125;</span><br><span class="line">    ]</span>,</span><br><span class="line">    "<span class="attribute">paging</span>": <span class="value">&#123;</span><br><span class="line">      "<span class="attribute">next</span>": <span class="value"><span class="string">"https://graph.facebook.com/1421116644879628/friends?limit=25&amp;offset=25&amp;__after_id=enc_AdAMpWdRxSLZAvND6bEd0htyyGsZAZBvzP6jzoAIZBKS9EiBSndZCNZC3S1AC5TEYchbuuBSV0xvg7ziwO4Cdt843yZApF"</span></span><br><span class="line">    </span>&#125;</span>,</span><br><span class="line">    "<span class="attribute">summary</span>": <span class="value">&#123;</span><br><span class="line">      "<span class="attribute">total_count</span>": <span class="value"><span class="number">2</span></span><br><span class="line">    </span>&#125;</span><br><span class="line">  </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>可以看到此 test user 有兩個朋友也都有安裝此 app。</p>
<p>至於怎麼得到 test user 的 access token，我是利用 Parse.com 的 API Console，Endpoint 填入 users 且 Use Master Key 改成 Yes，send request 後即可在 response 中看到 access token，即可複製此 token 到 <a href="https://developers.facebook.com/tools/explorer/" target="_blank" rel="external">https://developers.facebook.com/tools/explorer/</a> 中做測試，如下圖。</p>
<p><img src="/blog/images/APIconsole02.png" alt="API console" title="API console"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>繼上一篇成功截取出使用者資料後，發現除了基本資料外，朋友、按讚的資訊等資料其實都抓不出來，原因是因為沒有給予 app 存取這些資訊的權限。要求權限的話可以透過 OAuth 來索取 access token ，其範例網址如下：</p>
<p><code>https://www]]>
    </summary>
    
      <category term="CloudCode" scheme="http://ssk7833.github.io/blog/tags/CloudCode/"/>
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Parse.com" scheme="http://ssk7833.github.io/blog/tags/Parse-com/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Parse.com Cloud Code Hosting 進行 Facebook 登入存取 - 2]]></title>
    <link href="http://ssk7833.github.io/blog/2015/06/20/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-2/"/>
    <id>http://ssk7833.github.io/blog/2015/06/20/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-2/</id>
    <published>2015-06-20T15:43:39.000Z</published>
    <updated>2016-01-05T10:02:43.106Z</updated>
    <content type="html"><![CDATA[<p>延續上一篇，成功使用 Facebook 登入 Parse.com 的使用者資訊後，接著就是怎麼從使用者資訊中取得 Facebook 的資料了。</p>
<p><img src="/blog/images/user.png" alt="User" title="User"><br>以上圖的 Facebook Test Users 為例，建立完的使用者可以由 Parse.com 的 Data 中看到，不過 authData 卻只顯示了 Facebook 的 ID，因此我們可以先透過 API Console 來對 users 作存取，這裡要注意的是 Use Master Key 記得要選 Yes，否則會沒有權限看 authData 的內容；users 後面的參數為 objectId，若不放置則會列出全部符合的資料。<br><img src="/blog/images/APIconsole.png" alt="API console" title="API console"><br>在 Response 中的內容：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="collection">&#123;</span><br><span class="line">  <span class="string">"authData"</span>: <span class="collection">&#123;</span><br><span class="line">    <span class="string">"facebook"</span>: <span class="collection">&#123;</span><br><span class="line">      // 不要想對這組 access_token 亂來，因為是 test user XD</span><br><span class="line">      <span class="string">"access_token"</span>: <span class="string">"CAAMCk3Pv7SkBAEjfvRaG4SrC8k3CXak1843iisuUJiIK9gYV9PNFRraXi9gxYVBJO83zsvzFO91dcACevKwinxAVPNCUeEv0UPWsmv7DZBlqPjtZCCnEBcMBKpU7ikoj9OKo1ZCwzi3wmTycsB2avHT1SiBxLUF5ZAHTaT9XDNtz1phGZCk0lltOY5agj0JGQ9ezNGmOsvUmdpKFASx5K"</span>,</span><br><span class="line">      <span class="string">"expiration_date"</span>: <span class="string">"2015-08-15T17:52:46.495Z"</span>,</span><br><span class="line">      <span class="string">"id"</span>: <span class="string">"118563748477765"</span></span><br><span class="line">    &#125;</span></span><br><span class="line">  &#125;</span>,</span><br><span class="line">  <span class="string">"createdAt"</span>: <span class="string">"2015-06-16T17:52:48.623Z"</span>,</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"Super Mario"</span>,</span><br><span class="line">  <span class="string">"objectId"</span>: <span class="string">"wmVm7Qb1Fc"</span>,</span><br><span class="line">  <span class="string">"sessionToken"</span>: <span class="string">"jEKKzfbDcIN0CmBIvsdZR9Aoc"</span>,</span><br><span class="line">  <span class="string">"updatedAt"</span>: <span class="string">"2015-06-17T07:57:08.934Z"</span>,</span><br><span class="line">  <span class="string">"username"</span>: <span class="string">"3GwDpgmuqmfnyGYINNI27W9fO"</span></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>已經知道存放在哪裡之後，接下來就是利用 cloud code function 建立資料存取了！在這裡我用名字與圖片作範例，參考了 <a href="http://stackoverflow.com/a/16445118/4968420" target="_blank" rel="external">stackoverflow 這篇的回答</a>稍微修改了一下：<br>當然，別忘記 userMasterKey…<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Parse.Cloud.define(<span class="string">"facebook"</span>, <span class="function"><span class="keyword">function</span><span class="params">(request, response)</span> </span>&#123;</span><br><span class="line">  Parse.Cloud.useMasterKey();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">new</span> Parse.Query(Parse.User).<span class="keyword">get</span>(request.params.user_id).then(<span class="function"><span class="keyword">function</span><span class="params">(user)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> authData = user.<span class="keyword">get</span>(<span class="string">"authData"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Quit early for users who aren't linked with Facebook</span></span><br><span class="line">    <span class="keyword">if</span> (authData === <span class="literal">undefined</span> || authData.facebook === <span class="literal">undefined</span>) &#123;</span><br><span class="line">      response.success(<span class="literal">null</span>);</span><br><span class="line">       <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Parse.Cloud.httpRequest(&#123;</span><br><span class="line">      method: <span class="string">"GET"</span>,</span><br><span class="line">      url: <span class="string">"https://graph.facebook.com/me"</span>,</span><br><span class="line">      params: &#123;</span><br><span class="line">        access_token: authData.facebook.access_token,</span><br><span class="line">        fields: <span class="string">"name, friends"</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  &#125;).then(<span class="function"><span class="keyword">function</span><span class="params">(json)</span> </span>&#123;</span><br><span class="line">    response.success(json.data);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Promises will let you bubble up any error, similar to a catch statement</span></span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span><span class="params">(error)</span> </span>&#123;</span><br><span class="line">    response.error(error);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>在 Express 中 call 建立好的 cloud host function：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="keyword">get</span>(<span class="string">'/test'</span>, fbLogin, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> user = Parse.User.current();</span><br><span class="line">  Parse.Cloud.run(<span class="string">'facebook'</span>, &#123; user_id: user.id &#125;, &#123;</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span><span class="params">(results)</span> </span>&#123;</span><br><span class="line">      res.send(<span class="string">'Congrats, you are logged in, '</span> + results.name + <span class="string">'!'</span> +  <span class="string">'&lt;img src="https://graph.facebook.com/'</span>+ results.id +<span class="string">'/picture?type=normal"&gt;'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span><span class="params">(error)</span> </span>&#123;</span><br><span class="line">      console.log(<span class="string">"error :"</span> + error);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>若是成功的話就能在自己的 URL 中看到如下圖的結果了！<br><img src="/blog/images/facebookSuccess.png" alt="Facebook success" title="Facebook success"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>延續上一篇，成功使用 Facebook 登入 Parse.com 的使用者資訊後，接著就是怎麼從使用者資訊中取得 Facebook 的資料了。</p>
<p><img src="/blog/images/user.png" alt="User" title="User"><]]>
    </summary>
    
      <category term="CloudCode" scheme="http://ssk7833.github.io/blog/tags/CloudCode/"/>
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Parse.com" scheme="http://ssk7833.github.io/blog/tags/Parse-com/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Parse.com Cloud Code Hosting 進行 Facebook 登入存取 - 1]]></title>
    <link href="http://ssk7833.github.io/blog/2015/06/20/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-1/"/>
    <id>http://ssk7833.github.io/blog/2015/06/20/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-1/</id>
    <published>2015-06-20T14:13:10.000Z</published>
    <updated>2016-01-05T10:02:43.106Z</updated>
    <content type="html"><![CDATA[<p><a href="http://parse.com/" target="_blank" rel="external">Parse.com</a> 在 <a href="https://parse.com/docs/tw/js/guide" target="_blank" rel="external">javascript SDK</a> 中提供了使用者的存取，其中包含 Facebook 的整合，但 javascript 終究是前端，有些不想讓 client end知道的還是放在後端處理比較好。然而 Parse.com 所提供的 cloud code 所使用的目前雖是 node.js，會讓開發者很想直接把 javascript SDK 的 Facebook 部分塞進去看能不能跑，乍看之下很合理，但實際上就是不行，因為以 Parse.com Javascript SDK在要求登入時會跳出另一個瀏覽器視窗以要求登入 Facebook 及權限給予，而這個視窗當然沒有辦法在 server end 中呈現並要求 client end 進行認證。</p>
<p>在官方論壇上也有人發表過此問題：<a href="https://www.parse.com/questions/interacting-with-the-facebook-api-in-cloud-code" target="_blank" rel="external">Interacting with the Facebook API in Cloud Code</a><br>所得到的回答是：<br><strong>Unfortunately, the Facebook JavaScript SDK is not made to work outside of a browser, so using it directly from Cloud Code is not supported at the moment.</strong></p>
<p><strong>You can, however, get the authData from the current user in cloud code and use that to make a REST call to Facebook’s graph API manually.</strong></p>
<p>因此我轉而研究使用OAuth方式來登入Facebook，除了跳轉出的頁面比較美觀外（不會產生另一個瀏覽器視窗），也不用擔心暴露資訊給clent end，參考資料有這兩篇：<br><a href="http://sweeteason.pixnet.net/blog/post/40581580-%E7%B6%B2%E7%AB%99%E5%88%A9%E7%94%A8-facebook-%E5%B8%B3%E8%99%9F%E7%99%BB%E5%85%A5-%28%E4%BD%BF%E7%94%A8-oauth%29" target="_blank" rel="external">網站利用 Facebook 帳號登入 (使用 OAuth)</a><br><a href="https://gigenchang.wordpress.com/2014/01/26/10%E5%88%86%E9%90%98%E7%90%86%E8%A7%A3oauth%E5%92%8Cfacebook%E7%99%BB%E5%85%A5%E5%8E%9F%E7%90%86/" target="_blank" rel="external">10分鐘理解OAuth和facebook登入原理</a><br>這篇以python Django framework實作，其實看code好像也蠻容易理解的：<a href="http://nthn.me/posts/2012/facebook-registration.html" target="_blank" rel="external">Ghetto Facebook Registration with Django</a></p>
<p>後來正當我開始打算實作時，我找到了 <a href="https://github.com/ParsePlatform/parse-facebook-user-session" target="_blank" rel="external">parse-facebook-user-session</a> ，原來 Parse.com 早就把這個寫好了，根本不用自己去寫了，只需要按照他的說明一步一步來就行了（吧）！</p>
<p>結果證明事情果然不是我想的這麼簡單，不管怎麼弄就是跳出 <strong>209 invalid session token</strong> ，花了一段時間後找到 Parse.com 自己發的文章 <a href="https://www.parse.com/tutorials/session-migration-tutorial" target="_blank" rel="external">Session Migration Tutorial</a> ，才知道把這個選項關掉就行了，我花了這麼久到底在幹麻！</p>
<p><img src="/blog/images/userSessions.png" alt="User sessions" title="User sessions"><br>總之，關閉這個選項後就成功了， Parse.com 的資料庫也會成功紀錄登入過的使用者，事情完成一半，其餘的就是登入的使用者資料該怎麼讀取出來了～</p>
<p><strong>UPDATE：</strong>在GitHub上新增了 <a href="https://loginexample.parseapp.com/" target="_blank" rel="external">demo</a>：<a href="https://github.com/ssk7833/Parse-Facebook-OAuth-login-example" target="_blank" rel="external">GitHub</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://parse.com/" target="_blank" rel="external">Parse.com</a> 在 <a href="https://parse.com/docs/tw/js/guide" target="_blank" r]]>
    </summary>
    
      <category term="CloudCode" scheme="http://ssk7833.github.io/blog/tags/CloudCode/"/>
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Parse.com" scheme="http://ssk7833.github.io/blog/tags/Parse-com/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
  </entry>
  
</feed>
