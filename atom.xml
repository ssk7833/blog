<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>北風筆記</title>
  <subtitle>紀錄一些學習心得、過程及日常</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://ssk7833.github.io/blog/"/>
  <updated>2016-06-24T07:18:26.501Z</updated>
  <id>http://ssk7833.github.io/blog/</id>
  
  <author>
    <name>North</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>取得 Parse server 推播通知送出狀態</title>
    <link href="http://ssk7833.github.io/blog/2016/06/06/retrieve-push-status/"/>
    <id>http://ssk7833.github.io/blog/2016/06/06/retrieve-push-status/</id>
    <published>2016-06-06T03:02:00.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;在 &lt;a href=&quot;https://parse.com/docs/rest/guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Parse REST API Developers Guide&lt;/a&gt; 中，可以在 Quick Reference 看到所有使用的方法。在 Push Notification 分類中只有 POST 的方法，不像 Installations 可以透過 GET 方法到 &lt;code&gt;/installations/&amp;lt;objectId&amp;gt;&lt;/code&gt; 來獲取已安裝裝置的資訊；然而若需要去擷取推播傳遞的狀態時，可以利用存於 mongoDB 中的 _PushStatus 來取得資訊，既然 push 的方法只有 POST，就繞個路把 _PushStatus 當成 Objects 來處理，Objects 的使用方法就多了。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;URL&lt;/th&gt;
&lt;th&gt;HTTP Verb&lt;/th&gt;
&lt;th&gt;Functionality&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;/classes/&amp;lt;className&amp;gt;&lt;/td&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://parse.com/docs/rest/guide#objects-creating-objects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Creating Objects&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/classes/&amp;lt;className&amp;gt;/&amp;lt;objectId&amp;gt;&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://parse.com/docs/rest/guide#objects-retrieving-objects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Retrieving Objects&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/classes/&amp;lt;className&amp;gt;/&amp;lt;objectId&amp;gt;&lt;/td&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://parse.com/docs/rest/guide#objects-updating-objects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Updating Objects&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/classes/&amp;lt;className&amp;gt;&lt;/td&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://parse.com/docs/rest/guide#queries&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Queries&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;/classes/&amp;lt;className&amp;gt;/&amp;lt;objectId&amp;gt;&lt;/td&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://parse.com/docs/rest/guide#objects-deleting-objects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deleting Objects&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;要取得推播通知狀態則是利用上表兩個 GET 的功能，若指定 objectId 則只回傳 objectId 那筆資訊，若不指定則回傳最近的幾筆資訊。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X GET \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Application-Id: parseAppId&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Master-Key: parseMasterKey&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  http://localhost:&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;/parse/classes/_PushStatus/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;正常下會得到：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;results&quot;&lt;/span&gt;:[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;xzBThEHVyc&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-19T10:00:59.827Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;VGo2rHGXjK&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-19T10:01:59.790Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;9rnRdakYzD&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-19T10:04:59.798Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;7pde1mbqzY&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-19T13:00:09.126Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;M2PmduKLH0&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-20T02:26:59.997Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;URiaNdDBps&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-20T02:35:59.991Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;eN8R4gVDEx&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-20T02:37:00.077Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;KRBif8iM6u&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-20T03:13:59.892Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;BP5FYt2GVX&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-20T03:24:59.846Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;1nSmDpZ3Yz&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-24T02:55:01.595Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;FDFjpei6rP&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-24T02:58:01.327Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;hTkD1EKO9U&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-24T03:02:01.608Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;TDT2bONPEF&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-24T07:51:02.636Z&quot;&lt;/span&gt;,…&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;:&amp;#123;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;tGuEYvGLbp&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-25T07:35:20.034Z&quot;&lt;/span&gt;,…&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而若加上 objectId，則會取得此 objectId 單筆資訊：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X GET \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Application-Id: parseAppId&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Master-Key: parseMasterKey&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  http://localhost:&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;/parse/classes/_PushStatus/tGuEYvGLbp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;正常下會得到：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;ACL&quot;&lt;/span&gt;: &amp;#123;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;tGuEYvGLbp&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-25T07:35:20.034Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;pushTime&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-25T07:35:20.034Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;query&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;\&quot;deviceType\&quot;:&amp;#123;\&quot;$in\&quot;:[\&quot;ios\&quot;]&amp;#125;,\&quot;gender\&quot;:&amp;#123;\&quot;$in\&quot;:[\&quot;female\&quot;]&amp;#125;&amp;#125;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;payload&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;\&quot;alert\&quot;:\&quot;All work and no play makes Jack a dull boy.\&quot;&amp;#125;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;source&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;rest&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;status&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;succeeded&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;numSent&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;pushHash&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;cd3f8c70e6cfecc66ab69a0ee4c3c564&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;updatedAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-05-25T07:35:22.600Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;numFailed&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;sentPerType&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;ios&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;兩者都可取得 &lt;code&gt;numSent&lt;/code&gt;, &lt;code&gt;numFailed&lt;/code&gt; 及 &lt;code&gt;sentPerType&lt;/code&gt;，可利於推播通知的統計分析。&lt;/p&gt;
&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://parse.com/docs/rest/guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;REST API Developers Guide | Parse&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在 &lt;a href=&quot;https://parse.com/docs/rest/guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Parse REST API Developers Guide&lt;/a&gt; 中，可以在 Quick Reference 看到
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="Parse server" scheme="http://ssk7833.github.io/blog/tags/Parse-server/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
      <category term="push notification" scheme="http://ssk7833.github.io/blog/tags/push-notification/"/>
    
  </entry>
  
  <entry>
    <title>隱藏 console 中的 source 來源</title>
    <link href="http://ssk7833.github.io/blog/2016/05/25/hide-source-of-log-messages-in-console/"/>
    <id>http://ssk7833.github.io/blog/2016/05/25/hide-source-of-log-messages-in-console/</id>
    <published>2016-05-25T07:02:30.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;先前有發現 Facebook 在開發人員工具的 console 中最右邊不會顯示 log 的來源行數，覺得神奇，但並沒有深入了解如何實作此效果。而最近看到有人提問同樣的問題，同樣以 Facebook 的 console 為例來發問，激起了我的求知慾望。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-05-25-hide-source-of-log-messages-in-console/01.png&quot; alt=&quot;Facebook 的 console，最右端沒顯示來源&quot; title=&quot;Facebook 的 console，最右端沒顯示來源&quot;&gt;&lt;br&gt;&lt;img src=&quot;/blog/images/2016-05-25-hide-source-of-log-messages-in-console/02.png&quot; alt=&quot;正常呼叫 console.log 時，最右端會顯示來源&quot; title=&quot;正常呼叫 console.log 時，最右端會顯示來源&quot;&gt;&lt;/p&gt;
&lt;p&gt;單純要查到此功能似乎不難，剛好在四個月前有人在 &lt;a href=&quot;http://stackoverflow.com/questions/34762774/how-to-hide-source-of-log-messages-in-console&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt; 問了同樣的問題，而方法就是利用下方寫法即可：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setTimeout(&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log.bind(&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Hello world!&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看到 Facebook 將 console 的預設樣式改掉，因此我也試著去看該怎麼做，果然樣式是用 CSS 去設定，而要設定的部分前面記得放個 &lt;code&gt;%c&lt;/code&gt;，若有多段需要不同樣式則放入多個 &lt;code&gt;%c&lt;/code&gt;，每個 &lt;code&gt;%c&lt;/code&gt; 都是獨立的，樣式不會互相覆蓋；而 CSS 以額外參數的方式傳遞，若有 N 個 &lt;code&gt;%c&lt;/code&gt;，則需要另外傳入 N 個參數。範例如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;%cRed color&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;color:red;&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 顯示為紅色字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;%cRed color with blue background&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;color:red; background:blue;&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 顯示紅色字與藍色背景&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;%cRed color and %cgreen color&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;color:red;&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;color:green;&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 顯示紅色字即綠色字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;%cRed color%c and %cgreen color&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;color:red;&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;color:green;&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 顯示紅色字即綠色字，將 &quot;and&quot; 改回預設樣式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;兩者結合起來的話，一樣將樣式參數放於之後：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;setTimeout(&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log.bind(&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;%cRed color&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;color:red;&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因此我寫了一個範例，可以開啟開發人員工具的 console 觀看結果：&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;JKPYoX&quot; data-default-tab=&quot;js,result&quot; data-user=&quot;ssk7833&quot; data-embed-version=&quot;2&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/ssk7833/pen/JKPYoX/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Custom console log messages&lt;/a&gt; by North (&lt;a href=&quot;http://codepen.io/ssk7833&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@ssk7833&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;好，問題解決了！&lt;br&gt;但痛苦來臨，我走不出自己這關 XD，深問 why？為什麼 &lt;code&gt;setTimeout(console.log.bind(console, &amp;quot;something&amp;quot;))&lt;/code&gt; 能有如此魔力使來源行數隱藏起來？式了很多方式去包裝 console 還是徒勞無功，且 setTimeout 好像是必要的？自行寫了一個具有 callback function 的 function 也無法達到一樣效果。&lt;/p&gt;
&lt;p&gt;後來想到或許能在 stack trace 中得到一點線索，因此改下 &lt;code&gt;console.error&lt;/code&gt; 試試看，結果還是深深地打了我一巴掌，stack trace 竟然完全是空的。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-05-25-hide-source-of-log-messages-in-console/03.png&quot; alt=&quot;比較 error 上下的差別&quot; title=&quot;比較 error 上下的差別&quot;&gt;&lt;/p&gt;
&lt;p&gt;有人跟我說，會不會是 call 到 browser 的 console 再從 console 下 command 才會這樣顯示出來？結果也不是，也是跳出了來源。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-05-25-hide-source-of-log-messages-in-console/04.png&quot; alt=&quot;使用開發者工具下指令結果一樣&quot; title=&quot;使用開發者工具下指令結果一樣&quot;&gt;&lt;/p&gt;
&lt;p&gt;真是奇怪啊！百思不得其解後，決定先「不求甚解」了，等待哪一天突然想到再補充吧。&lt;/p&gt;
&lt;p&gt;2016-05-26 Update:&lt;/p&gt;
&lt;p&gt;最後跑去 &lt;a href=&quot;http://stackoverflow.com/q/37430531/4968420&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt; 問了，也有人回答了讓我似懂非懂的答案，因有些不確定性的部分並沒提到，總之可能就先這樣，哪天想到再繼續研究。&lt;/p&gt;
&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/34762774/how-to-hide-source-of-log-messages-in-console&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to hide source of Log messages in Console?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/7505623/colors-in-javascript-console&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Colors in JavaScript console&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/debug/console/console-reference&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Console API Reference | Web Tools - Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DeveloperToolsWG/console-object/blob/master/api.md#format-specifiers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Format Specifiers&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;先前有發現 Facebook 在開發人員工具的 console 中最右邊不會顯示 log 的來源行數，覺得神奇，但並沒有深入了解如何實作此效果。而最近看到有人提問同樣的問題，同樣以 Facebook 的 console 為例來發問，激起了我的求知慾望。&lt;br&gt;&lt;img sr
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="javascript" scheme="http://ssk7833.github.io/blog/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Parse 推播回傳 _pushStatus 的 id</title>
    <link href="http://ssk7833.github.io/blog/2016/05/20/Parse-push-return-pushStatus-objectId/"/>
    <id>http://ssk7833.github.io/blog/2016/05/20/Parse-push-return-pushStatus-objectId/</id>
    <published>2016-05-20T08:28:51.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;在使用 parse server REST API 的推播功能時，推播成功送到 parse server 只會時回傳 &lt;code&gt;{&amp;quot;result&amp;quot;:true}&lt;/code&gt;，只有這資訊對於後台串接 parse server 不是很方便，因缺乏 &lt;code&gt;_pushStatus&lt;/code&gt; 中的 id，導致資料送出後就一去無回，不方便針對各個送出到 parse server 的資料做對應。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X POST \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Application-Id: parseAppId&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Master-Key: parseMasterKey&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;where&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;deviceType&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &quot;$in&quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &quot;ios&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;data&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;title&quot;: &quot;The Shining&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;alert&quot;: &quot;All work and no play makes Jack a dull boy.&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&#39;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  http://localhost:&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;/parse/push/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;正常下會得到：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所幸在 parse server 2.2.7 版時新增了 &lt;code&gt;X-Parse-Push-Status-Id&lt;/code&gt; 這個 header，如同現行的 Parse.com 一樣，因為考量到回傳 object id 可能會暴露給 clients，因此放在 response 的 header 中。如何驗證 header 確實存在 &lt;code&gt;X-Parse-Push-Status-Id&lt;/code&gt;，可以利用 curl 加上 -v 來看整個 request, response 的結果。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X POST \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Application-Id: parseAppId&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Master-Key: parseMasterKey&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;where&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;deviceType&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &quot;$in&quot;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &quot;ios&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;data&quot;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;title&quot;: &quot;The Shining&quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &quot;alert&quot;: &quot;All work and no play makes Jack a dull boy.&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&#39;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  http://localhost:&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;/parse/push/ \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -v&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到類似結果，回傳的 header 中就能看到 X-Parse-Push-Status-Id：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*   Trying &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* Connected to localhost (&lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;) port &lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt; (&lt;span class=&quot;comment&quot;&gt;#0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; POST /parse/push/ HTTP/&lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; User-Agent: curl/&lt;span class=&quot;number&quot;&gt;7.41&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; Host: localhost:&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; Accept: */*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; X-Parse-Application-Id: parseAppId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; X-Parse-Master-Key: parseMasterKey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; Content-Type: application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; Content-Length: &lt;span class=&quot;number&quot;&gt;125&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* upload completely sent off: &lt;span class=&quot;number&quot;&gt;125&lt;/span&gt; out of &lt;span class=&quot;number&quot;&gt;125&lt;/span&gt; bytes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; HTTP/&lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; X-Powered-By: Express&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; Access-Control-Allow-Origin: *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; Access-Control-Allow-Methods: GET,PUT,POST,DELETE,OPTIONS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; Access-Control-Allow-Headers: X-Parse-Master-Key, X-Parse-REST-API-Key, X-Parse-Javascript-Key, X-Parse-Application-Id, X-Parse-Client-Version, X-Parse-Session-Token, X-Requested-With, X-Parse-Revocable-Session, Content-Type&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; X-Parse-Push-Status-Id: gLdaMNg12i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; Content-Type: application/json; charset=utf-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; Content-Length: &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; Date: Fri, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; May &lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;07&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;58&lt;/span&gt; GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt; Connection: keep-alive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;result&quot;&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&amp;#125;* Connection &lt;span class=&quot;comment&quot;&gt;#0 to host localhost left intact&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;有了這個資訊後，就可以在後台中做到許多變化，以下為 node.js 的範例：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; http = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; config = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  parseLocation: &lt;span class=&quot;string&quot;&gt;&#39;localhost&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  parsePort: &lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  parsePush: &lt;span class=&quot;string&quot;&gt;&#39;/parse/push&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  parseAppId: &lt;span class=&quot;string&quot;&gt;&#39;parseAppId&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  parseMasterKey:&lt;span class=&quot;string&quot;&gt;&#39;parseMasterKey&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 範例用 object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;where&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;deviceType&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;$in&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;ios&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;The Shining&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;alert&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;All work and no play makes Jack a dull boy.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; req = http.request(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  host: config.parseLocation,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  port: config.parsePort,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  path: config.parsePush,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  method: &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  headers: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;application/json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;X-Parse-Application-Id&#39;&lt;/span&gt;: config.parseAppId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;X-Parse-Master-Key&#39;&lt;/span&gt;: config.parseMasterKey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; jsonString = &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.on(&lt;span class=&quot;string&quot;&gt;&#39;data&#39;&lt;/span&gt;, (chunk) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jsonString += chunk;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.on(&lt;span class=&quot;string&quot;&gt;&#39;end&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; json = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(jsonString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(json.result===&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 在這裡確認 result 為 true 後，將 x-parse-push-status-id 存在某個 obj 中來做對應&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(res.headers[&lt;span class=&quot;string&quot;&gt;&#39;x-parse-push-status-id&#39;&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// 印出 x-parse-push-status-id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      obj.pushId = res.headers[&lt;span class=&quot;string&quot;&gt;&#39;x-parse-push-status-id&#39;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; postData = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.write(postData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.end();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最後 obj 會得到類似結果：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;where&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;deviceType&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;$in&quot;&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&quot;ios&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;The Shining&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;alert&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;All work and no play makes Jack a dull boy.&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;pushId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;kAuJhPqpt9&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下來怎麼儲存物件及使用這些資料就是另一個課題了～&lt;/p&gt;
&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/parse-server/pull/1412&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Adds X-Parse-Push-Status-Id header&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/parse-server/issues/1157&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Return PushStatus ID from push endpoint.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://parse.com/docs/rest/guide#push-notifications-sending-pushes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sending Pushes&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在使用 parse server REST API 的推播功能時，推播成功送到 parse server 只會時回傳 &lt;code&gt;{&amp;quot;result&amp;quot;:true}&lt;/code&gt;，只有這資訊對於後台串接 parse server 不是很方便，因缺乏 &lt;cod
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="Parse server" scheme="http://ssk7833.github.io/blog/tags/Parse-server/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
      <category term="push notification" scheme="http://ssk7833.github.io/blog/tags/push-notification/"/>
    
  </entry>
  
  <entry>
    <title>Google Web Speech API 語音辨識 持續收音</title>
    <link href="http://ssk7833.github.io/blog/2016/04/21/Google-Web-Speech-API-continous-recording/"/>
    <id>http://ssk7833.github.io/blog/2016/04/21/Google-Web-Speech-API-continous-recording/</id>
    <published>2016-04-21T02:06:51.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;Google 的 web speech API 已經推出一段時間了，最近剛好有機會來試試。&lt;br&gt;Web speech API 的操作並不困難，基本上就是 &lt;code&gt;var recognition = new webkitSpeechRecognition();&lt;/code&gt;，可以在下方參考資料中看到相關原始碼，唯獨我預設的需求是必須可持續收音，因使用者可能是在不適合任何物理碰觸的環境下操作，所以鍵盤滑鼠及觸控螢幕皆不適合在此當作 input 來源。然而 web speech API 的持續收音 &lt;code&gt;recognition.continuous = true;&lt;/code&gt; 若發現麥克風閒置太長的話，一樣會自動停止收音，因此還是要再重新觸發 &lt;code&gt;recognition.start();&lt;/code&gt;，所幸我就將 &lt;code&gt;recognition.start();&lt;/code&gt; 寫到 &lt;code&gt;onend&lt;/code&gt; event handler，天真的以為這樣就解決問題了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/allowMicrophone.png&quot; alt=&quot;要求使用麥克風&quot; title=&quot;要求使用麥克風&quot;&gt;&lt;br&gt;當每次收音結束後又重新觸發開始時，就會跳出這個允許授權的視窗，而當然此時是不能收音的，可以在此&lt;a href=&quot;http://codepen.io/ssk7833/pen/YqepJb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;範例&lt;/a&gt;體驗一下。&lt;/p&gt;
&lt;p&gt;經過一番查證後，發現其實這個問題也不算問題，只是因為 chrome 要求安全性而在 http 上做出每次收音前都須要先確認允許才行，若是使用 https 的話只要允許過第一次後就再也不會詢問了，下方範例即是上方同一個範例的 https 版本。&lt;/p&gt;
&lt;iframe height=&quot;300&quot; scrolling=&quot;no&quot; src=&quot;https://codepen.io/ssk7833/embed/YqepJb/?height=300&amp;theme-id=0&amp;default-tab=js,result&amp;embed-version=2&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot; style=&quot;width: 100%;&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/ssk7833/pen/YqepJb/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web Speech API Demo&lt;/a&gt; by North (&lt;a href=&quot;http://codepen.io/ssk7833&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@ssk7833&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;br&gt;&lt;/iframe&gt;

&lt;p&gt;允許之後就可以在麥克風例外狀況中看到已經預設允許的清單，在此清單中被允許的就再也不會跳出詢問視窗了，而 localhost 也是在允許範圍內，因此就可以做出很多有趣的事情了！&lt;br&gt;&lt;img src=&quot;/blog/images/microphoneExceptions.png&quot; alt=&quot;麥克風例外狀況&quot; title=&quot;麥克風例外狀況&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用上的話，目前好像也沒看到什麼限制，也沒找到限制相關的文件，自己親自掛了好幾小時也還是活得好好的。&lt;/p&gt;
&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2013/01/Voice-Driven-Web-Apps-Introduction-to-the-Web-Speech-API&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Voice Driven Web Apps: Introduction to the Web Speech API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.google.com/intl/en/chrome/demos/speech.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web Speech API Demonstration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.oxxostudio.tw/articles/201509/web-speech-api.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google 語音辨識 API&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Google 的 web speech API 已經推出一段時間了，最近剛好有機會來試試。&lt;br&gt;Web speech API 的操作並不困難，基本上就是 &lt;code&gt;var recognition = new webkitSpeechRecognition();&lt;/cod
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="javascript" scheme="http://ssk7833.github.io/blog/tags/javascript/"/>
    
      <category term="web speech API" scheme="http://ssk7833.github.io/blog/tags/web-speech-API/"/>
    
  </entry>
  
  <entry>
    <title>Parse Server APNS(iOS) 推播通知設定</title>
    <link href="http://ssk7833.github.io/blog/2016/04/19/parse-server-push-notification-APNS/"/>
    <id>http://ssk7833.github.io/blog/2016/04/19/parse-server-push-notification-APNS/</id>
    <published>2016-04-19T07:56:37.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;Parse 的一大方便之處，即是他提供了推播通知(push notification)的整合，使開發者可以在短時間內完成推播功能；而推播通知也已經移植到 Parse Server 版本上，步驟與先前在 Parse 上差不了多少，在這裡紀錄一下 APNS(iOS) 設定的步驟。&lt;/p&gt;
&lt;h2 id=&quot;建立-SSL-憑證&quot;&gt;&lt;a href=&quot;#建立-SSL-憑證&quot; class=&quot;headerlink&quot; title=&quot;建立 SSL 憑證&quot;&gt;&lt;/a&gt;建立 SSL 憑證&lt;/h2&gt;&lt;p&gt;在發送推播前必須給予 Parse Server 推播的權限，因此要先建立對應的 App ID 及 SSL 憑證。&lt;/p&gt;
&lt;h3 id=&quot;1-建立-Explicit-App-ID&quot;&gt;&lt;a href=&quot;#1-建立-Explicit-App-ID&quot; class=&quot;headerlink&quot; title=&quot;1. 建立 Explicit App ID&quot;&gt;&lt;/a&gt;1. 建立 Explicit App ID&lt;/h3&gt;&lt;p&gt;如果原本就已經有建立 Explicit App ID 的話，請跳過此步驟到 &lt;a href=&quot;#2-設定推播通知&quot;&gt;2. 設定推播通知&lt;/a&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;到 &lt;a href=&quot;https://developer.apple.com/membercenter/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apple Developer Member Center&lt;/a&gt; 登入，點選 &lt;a href=&quot;https://developer.apple.com/account/ios/certificate/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Certificates, Identifiers &amp;amp; Profiles&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;點選左欄中 Identifiers 底下的 &lt;a href=&quot;https://developer.apple.com/account/ios/identifier/bundle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App IDs&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;點選右上角 + 的按鈕。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/01.png&quot; alt=&quot;建立 App ID&quot; title=&quot;建立 App ID&quot;&gt;&lt;/li&gt;
&lt;li&gt;在 App ID Description 填上想要的名稱。&lt;/li&gt;
&lt;li&gt;選擇 App ID Prefix，我的只有一組，好像預設就會自己選了～&lt;/li&gt;
&lt;li&gt;App ID suffix 要注意選擇 Explicit App ID，而 Bundle ID 可參考 Apple 推薦的填法或是自己偏好的格式，須注意這組之後會在 Xcode 中使用到。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/02.png&quot; alt=&quot;Explicit App ID&quot; title=&quot;Explicit App ID&quot;&gt;&lt;/li&gt;
&lt;li&gt;將有需要用到的服務打勾，Push Notifications 記得要打勾！其餘就看自己有沒有要用到再開啟。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/03.png&quot; alt=&quot;Apple Services&quot; title=&quot;Apple Services&quot;&gt;&lt;/li&gt;
&lt;li&gt;點選 Contiune 進行下一步，確認無誤後就可以送出了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;2-設定推播通知&quot;&gt;&lt;a href=&quot;#2-設定推播通知&quot; class=&quot;headerlink&quot; title=&quot;2. 設定推播通知&quot;&gt;&lt;/a&gt;2. 設定推播通知&lt;/h3&gt;&lt;p&gt;到這裡，應該已經建立好一個 Explicit App ID。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;點開  &lt;a href=&quot;https://developer.apple.com/account/ios/identifier/bundle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App IDs&lt;/a&gt; 底下已建立的 App ID，再點選 Edit。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/04.png&quot; alt=&quot;App IDs Edit&quot; title=&quot;App IDs Edit&quot;&gt;&lt;/li&gt;
&lt;li&gt;找到 Push Notifications 項目，若沒 Enable 則將他打勾，可以在此建立 Development 跟 Production 的憑證，建議先從開發模式開始，點選 Development SSL Certificate 中底下的 Create Certificate…。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/05.png&quot; alt=&quot;Create Certificate&quot; title=&quot;Create Certificate&quot;&gt;&lt;/li&gt;
&lt;li&gt;接下來他會教你怎麼做，然後要你做完再點選 Contiune，因為我英文對應中文 MAC OS 不太熟，所以在這裡也把步驟打出來了，開啟 MAC 中的「鑰匙圈存取」。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/06.png&quot; alt=&quot;鑰匙圈存取&quot; title=&quot;鑰匙圈存取&quot;&gt;&lt;/li&gt;
&lt;li&gt;點選「鑰匙圈存取」→「憑證輔助程式」→「從憑證授權要求憑證…」（蠻饒舌的）。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/07.png&quot; alt=&quot;從憑證授權要求憑證…&quot; title=&quot;從憑證授權要求憑證…&quot;&gt;&lt;/li&gt;
&lt;li&gt;在「使用者電子郵件位址」輸入自己的 Email，「一般名稱」輸入自己想要的名稱，「CA 電子郵件位址」留白，「已將要求」選擇「儲存到硬碟」，接著點選「繼續」來產生 CSR 檔。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/08.png&quot; alt=&quot;憑證輔助程式&quot; title=&quot;憑證輔助程式&quot;&gt;&lt;/li&gt;
&lt;li&gt;將剛剛儲存的 CSR 檔案上傳。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/09.png&quot; alt=&quot;Upload CSR file&quot; title=&quot;Upload CSR file&quot;&gt;&lt;/li&gt;
&lt;li&gt;下載憑證，下載完成後點選兩下此檔案，使檔案安裝到「鑰匙圈存取」中。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/10.png&quot; alt=&quot;Download certificate&quot; title=&quot;Download certificate&quot;&gt;&lt;/li&gt;
&lt;li&gt;開啟「鑰匙圈存取」，在左欄點選「我的憑證」，你可能會看到 Apple Development Push Services: 及 Apple Push Services:，這兩個分別對應了 development 憑證及 production 憑證，端看你使用哪一個。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/11.png&quot; alt=&quot;Apple Development Push Services: &amp;amp; Apple Push Services:&quot; title=&quot;Apple Development Push Services: &amp;amp; Apple Push Services:&quot;&gt;&lt;/li&gt;
&lt;li&gt;在要使用的憑證上點選右鍵，選擇「輸出」項目，儲存名稱依自己喜歡而定。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/12.png&quot; alt=&quot;Export certificate&quot; title=&quot;Export certificate&quot;&gt;&lt;/li&gt;
&lt;li&gt;在按儲存時會跳出密碼詢問的視窗，記得&lt;strong&gt;留白&lt;/strong&gt;！&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/13.png&quot; alt=&quot;Leave it blank&quot; title=&quot;Leave it blank&quot;&gt;&lt;/li&gt;
&lt;li&gt;最後產生的檔案，將此檔案放到 Parse Server 的目錄內。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/14.png&quot; alt=&quot;.p12&quot; title=&quot;.p12&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Parse-Server-設定-APNS&quot;&gt;&lt;a href=&quot;#Parse-Server-設定-APNS&quot; class=&quot;headerlink&quot; title=&quot;Parse Server 設定 APNS&quot;&gt;&lt;/a&gt;Parse Server 設定 APNS&lt;/h2&gt;&lt;p&gt;延續 &lt;a href=&quot;/blog/2016/04/09/setup-parse-server/&quot;&gt;Parse Server 架設教學&lt;/a&gt;中所使用的程式碼，在 &lt;code&gt;new ParseServer&lt;/code&gt; 中加入 push 相關的程式碼，如下：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; api = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ParseServer(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  databaseURI: databaseUri || &lt;span class=&quot;string&quot;&gt;&#39;mongodb://localhost:27017/dev&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  cloud: process.env.CLOUD_CODE_MAIN || __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/cloud/main.js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  appId: process.env.APP_ID || &lt;span class=&quot;string&quot;&gt;&#39;7c6a1d1470fed0313b5044c4eb83def0&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  masterKey: process.env.MASTER_KEY || &lt;span class=&quot;string&quot;&gt;&#39;98584a6e0a2592c274d1e4eae44b0a7b&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// Add your master key here. Keep it secret!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  serverURL: process.env.SERVER_URL || &lt;span class=&quot;string&quot;&gt;&#39;http://localhost:1337/parse&#39;&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;// Don&#39;t forget to change to https if needed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  liveQuery: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classNames: [&lt;span class=&quot;string&quot;&gt;&quot;Posts&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Comments&quot;&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;// List of classes to support for query subscriptions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 以下為新增部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  push: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 此篇未提到 Android，因此註解掉&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// android: &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//   senderId: &#39;...&#39;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//   apiKey: &#39;...&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ios: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      pfx: &lt;span class=&quot;string&quot;&gt;&#39;pushDevelopmentCertificate.p12&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 與 index.js 目錄同層&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      bundleId: &lt;span class=&quot;string&quot;&gt;&#39;com.pushTest&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 填入先前填的 Bundle ID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      production: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// false: development, true: production&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;而若需要同時使用 development 及 production 的 APNS 時，可以將設定改為這樣：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;push: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ios: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      pfx: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// Dev PFX or P12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      bundleId: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      production: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// development&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      pfx: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// Prod PFX or P12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      bundleId: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      production: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// production&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;設定-client-apps&quot;&gt;&lt;a href=&quot;#設定-client-apps&quot; class=&quot;headerlink&quot; title=&quot;設定 client apps&quot;&gt;&lt;/a&gt;設定 client apps&lt;/h2&gt;&lt;p&gt;App 部分的設定與先前 Parse 的設定一樣，因此在這裡省略，可以參考 &lt;a href=&quot;https://github.com/ParsePlatform/Parse-Server/wiki/Push-Configuring-Clients&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Push Configuring Clients&lt;/a&gt; 尋找自己需要的程式語言寫法。&lt;/p&gt;
&lt;h2 id=&quot;測試推播通知&quot;&gt;&lt;a href=&quot;#測試推播通知&quot; class=&quot;headerlink&quot; title=&quot;測試推播通知&quot;&gt;&lt;/a&gt;測試推播通知&lt;/h2&gt;&lt;p&gt;推播傳送的方式一樣可用 curl 或是 cloud code，唯一要注意的是傳送推播通知需要 &lt;code&gt;masterKey&lt;/code&gt;，可以參考 &lt;a href=&quot;https://github.com/ParsePlatform/parse-server/wiki/Push#4-send-push-notifications&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Send Push Notifications&lt;/a&gt;。而 &lt;a href=&quot;https://github.com/ParsePlatform/parse-dashboard&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Parse Dashboard&lt;/a&gt;目前也可以傳送推播通知了，只可惜目前只可以傳而不能看傳送紀錄，下圖為 parse-dashboard 1.0.8 的畫面。&lt;br&gt;&lt;img src=&quot;/blog/images/2016-04-19-Parse-server-APNS/15.png&quot; alt=&quot;Parse Dashboard send push&quot; title=&quot;Parse Dashboard send push&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;疑難雜症&quot;&gt;&lt;a href=&quot;#疑難雜症&quot; class=&quot;headerlink&quot; title=&quot;疑難雜症&quot;&gt;&lt;/a&gt;疑難雜症&lt;/h2&gt;&lt;p&gt;正常來說過沒多久就 app 就能收到推播通知，如果沒有成功的話可以新增這兩個環境變數 &lt;code&gt;VERBOSE=1&lt;/code&gt; 及 &lt;code&gt;DEBUG=apn&lt;/code&gt;，若 &lt;code&gt;VERBOSE=1&lt;/code&gt; 看不出結果再觀察 &lt;code&gt;DEBUG=apn&lt;/code&gt;，其餘問題可能就要爬 issues 了。&lt;/p&gt;
&lt;p&gt;筆者遇到的問題很蠢，就是所在的網路環境中 port 2195 被鎖了，因此試了半天都推播失敗 Orz，請先確定自己到 &lt;code&gt;gateway.sandbox.push.apple.com:2195&lt;/code&gt; (development) 及 &lt;code&gt;gateway.push.apple.com:2195&lt;/code&gt; (production) 是否能通～&lt;/p&gt;
&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/parse-server/wiki/Push&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parse-server wiki - push&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/PushTutorial/blob/master/iOS/README.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PushTutorial - Push Notification Sample App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/parse-dashboard&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Parse Dashboard&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Parse 的一大方便之處，即是他提供了推播通知(push notification)的整合，使開發者可以在短時間內完成推播功能；而推播通知也已經移植到 Parse Server 版本上，步驟與先前在 Parse 上差不了多少，在這裡紀錄一下 APNS(iOS) 設定的步驟
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="APNS" scheme="http://ssk7833.github.io/blog/tags/APNS/"/>
    
      <category term="Parse server" scheme="http://ssk7833.github.io/blog/tags/Parse-server/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
      <category term="push notification" scheme="http://ssk7833.github.io/blog/tags/push-notification/"/>
    
  </entry>
  
  <entry>
    <title>Parse Server 架設教學</title>
    <link href="http://ssk7833.github.io/blog/2016/04/09/setup-parse-server/"/>
    <id>http://ssk7833.github.io/blog/2016/04/09/setup-parse-server/</id>
    <published>2016-04-09T03:33:05.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;在今年一月底時 &lt;a href=&quot;http://parse.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Parse&lt;/a&gt; 突然丟下了一枚震撼彈(&lt;a href=&quot;http://blog.parse.com/announcements/moving-on/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Moving On&lt;/a&gt;)，隨著 Parse 服務將在一年後關閉的消息，同時也提到將會把 Parse Server open source 出來，如今兩個月過去了，釋出的 Parse Server 也趨於完善，不只提供了許多雲端服務的整合方案，連 Parse Dashboard 也在三月初時 open source 了(&lt;a href=&quot;http://blog.parse.com/announcements/introducing-the-parse-server-dashboard/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Introducing the Parse Server Dashboard&lt;/a&gt;)，雖然這個 Dashboard 目前並不像 Parse 線上服務的功能一樣完整，但在短短一個月內間又多了推播(push notification)功能頁面(&lt;a href=&quot;http://blog.parse.com/announcements/push-and-config-come-to-the-parse-dashboard/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Push and Config come to the Parse Dashboard&lt;/a&gt;)，可以預見未來功能會越來越完整。&lt;/p&gt;
&lt;p&gt;單純架設 Parse Server 的難度不高，在 &lt;a href=&quot;https://github.com/ParsePlatform/parse-server&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt; 有對於要在 local 架設或是部屬到其他服務上如 Heroku 的範例教學，&lt;a href=&quot;https://github.com/ParsePlatform/parse-server/wiki&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wiki&lt;/a&gt; 頁面也有更完整的解說，但從這裡開始我個人認為不是個好選擇，以指令方式去帶 appId 及 masterKey 總有可能會發生什麼意外。Parse 另外提供了 &lt;a href=&quot;https://github.com/ParsePlatform/parse-server-example&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parse-server-example&lt;/a&gt;，這個對於入門來說會比較方便。&lt;/p&gt;
&lt;h2 id=&quot;前置環境&quot;&gt;&lt;a href=&quot;#前置環境&quot; class=&quot;headerlink&quot; title=&quot;前置環境&quot;&gt;&lt;/a&gt;前置環境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Node 4.3 以上&lt;/li&gt;
&lt;li&gt;MongoDB version 2.6.X or 3.0.X&lt;/li&gt;
&lt;li&gt;Python 2.x (For Windows users, 2.7.1 is the required version)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;架設-Parse-Server&quot;&gt;&lt;a href=&quot;#架設-Parse-Server&quot; class=&quot;headerlink&quot; title=&quot;架設 Parse Server&quot;&gt;&lt;/a&gt;架設 Parse Server&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先從 GitHub 上抓一份 parse-server-example 下來。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/ParsePlatform/parse-server-example.git --depth &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;將必要的模組裝上。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 &lt;code&gt;index.js&lt;/code&gt; 中修改參數，可以選擇修改環境變數或是直接修改後面字串：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;appId: 可填任意字串，用於識別 Parse API 的使用權限。在這裡用了 &lt;code&gt;md5&lt;/code&gt; 來產生隨機字串。&lt;/li&gt;
&lt;li&gt;masterKey: 可填任意字串，但不要公開此字串，用於覆寫權限設定。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; api = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ParseServer(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  databaseURI: databaseUri || &lt;span class=&quot;string&quot;&gt;&#39;mongodb://localhost:27017/dev&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  cloud: process.env.CLOUD_CODE_MAIN || __dirname + &lt;span class=&quot;string&quot;&gt;&#39;/cloud/main.js&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  appId: process.env.APP_ID || &lt;span class=&quot;string&quot;&gt;&#39;7c6a1d1470fed0313b5044c4eb83def0&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  masterKey: process.env.MASTER_KEY || &lt;span class=&quot;string&quot;&gt;&#39;98584a6e0a2592c274d1e4eae44b0a7b&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// Add your master key here. Keep it secret!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  serverURL: process.env.SERVER_URL || &lt;span class=&quot;string&quot;&gt;&#39;http://localhost:1337/parse&#39;&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;// Don&#39;t forget to change to https if needed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  liveQuery: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    classNames: [&lt;span class=&quot;string&quot;&gt;&quot;Posts&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Comments&quot;&lt;/span&gt;] &lt;span class=&quot;comment&quot;&gt;// List of classes to support for query subscriptions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;到這裡可以先執行看看。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm run start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此時 Parse API 預設會掛在 &lt;a href=&quot;http://localhost:1337/parse/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:1337/parse/&lt;/a&gt; 下，有兩種方式可以測試是否運作正常：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接到第五步驟，利用此包程式碼中的範例網頁來測試。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;curl&lt;/code&gt; 來測試 Parse 的 REST API 是否正常運作，&lt;code&gt;X-Parse-Application-Id&lt;/code&gt; 需改成在 &lt;code&gt;index.js&lt;/code&gt; 中設定的 &lt;code&gt;appId&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X POST \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Application-Id: 7c6a1d1470fed0313b5044c4eb83def0&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;Content-Type: application/json&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;operator&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&quot;score&quot;:1337,&quot;playerName&quot;:&quot;Sean Plott&quot;,&quot;cheatMode&quot;:false&amp;#125;&#39;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  http://localhost:&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;/parse/classes/GameScore&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若正常無誤會得到以下類似的結果：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;CT8BWvZ8Fi&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-04-08T02:55:57.802Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;取值可利用以下指令來測試，&lt;code&gt;GameScore&lt;/code&gt; 後面需加上剛剛回傳的 &lt;code&gt;objectId&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -X GET \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -H &lt;span class=&quot;string&quot;&gt;&quot;X-Parse-Application-Id: 7c6a1d1470fed0313b5044c4eb83def0&quot;&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  http://localhost:&lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;/parse/classes/GameScore/CT8BWvZ8Fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;正常的話即可拿回上一步所傳的內容：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;CT8BWvZ8Fi&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;score&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1337&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;playerName&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Sean Plott&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;cheatMode&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;updatedAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-04-08T02:55:57.802Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-04-08T02:55:57.802Z&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;詳細操作可參考 &lt;a href=&quot;https://parse.com/docs/rest/guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;REST API Guide&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在這個範例中有提供 REST API 及 Cloud Code 的測試程式碼，可以執行看看功能是否正常。&lt;br&gt;在 &lt;code&gt;public/assets/js/script.js&lt;/code&gt; 中，將 &lt;code&gt;myAppId&lt;/code&gt; 取代成自己目前的 &lt;code&gt;appId&lt;/code&gt;，共有兩處；接著開啟 &lt;a href=&quot;http://localhost:1337/public/test.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:1337/public/test.html&lt;/a&gt; 即可看到測試頁面，依序點選下方的 &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;FETCH&lt;/code&gt; 及 &lt;code&gt;TEST&lt;/code&gt;，若正確無誤的話應能看到以下結果：&lt;br&gt;&lt;img src=&quot;/blog/images/ParseServerTest.png&quot; alt=&quot;Parse Server Test&quot; title=&quot;Parse Server Test&quot;&gt;&lt;br&gt;看到這個結果就代表 REST API 及 Cloud Code 都沒有問題，下一步就看自己是不是要加推播通知的設定及 Dashboard 了！&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/parse-server&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parse-server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/parse-server/wiki&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parse-server wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/parse-server-example&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parse-server-example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ParsePlatform/parse-server/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parse-server issues&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在今年一月底時 &lt;a href=&quot;http://parse.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Parse&lt;/a&gt; 突然丟下了一枚震撼彈(&lt;a href=&quot;http://blog.parse.com/announcements/movi
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="CloudCode" scheme="http://ssk7833.github.io/blog/tags/CloudCode/"/>
    
      <category term="Parse server" scheme="http://ssk7833.github.io/blog/tags/Parse-server/"/>
    
      <category term="Parse.com" scheme="http://ssk7833.github.io/blog/tags/Parse-com/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>Do it smart, a better way to write CSS - SASS/SCSS</title>
    <link href="http://ssk7833.github.io/blog/2016/03/30/do-it-smart-a-better-way-to-write-CSS/"/>
    <id>http://ssk7833.github.io/blog/2016/03/30/do-it-smart-a-better-way-to-write-CSS/</id>
    <published>2016-03-30T06:49:50.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;最近在會議中分享了以下這份投影片，算是一個 SASS/SCSS 的入門。我擷取了部分常用的基礎功能及寫法範例，希望對入門者有些幫助。&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;https://ssk7833.github.io/slides/SCSS/&quot; width=&quot;640&quot; height=&quot;480&quot; style=&quot;width:100%;&quot;&gt;&lt;/iframe&gt;&lt;br&gt;&lt;a href=&quot;https://ssk7833.github.io/slides/SCSS/&quot;&gt;Do it smart, a better way to write CSS - SASS/SCSS&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在會議中分享了以下這份投影片，算是一個 SASS/SCSS 的入門。我擷取了部分常用的基礎功能及寫法範例，希望對入門者有些幫助。&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;https://ssk7833.github.io/slides/SCSS/&quot; width=&quot;640
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="CSS" scheme="http://ssk7833.github.io/blog/tags/CSS/"/>
    
      <category term="SASS" scheme="http://ssk7833.github.io/blog/tags/SASS/"/>
    
      <category term="SCSS" scheme="http://ssk7833.github.io/blog/tags/SCSS/"/>
    
  </entry>
  
  <entry>
    <title>實作 gooey 膠粘效果</title>
    <link href="http://ssk7833.github.io/blog/2016/03/09/implement-gooey-effect/"/>
    <id>http://ssk7833.github.io/blog/2016/03/09/implement-gooey-effect/</id>
    <published>2016-03-09T05:48:05.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;最近在試著實作 gooey 效果，看了一些介紹後知道了 gooey 的原理，本以為在實作上可以一路順風，但果然沒有這麼簡單，還好最後有找到解決方法。&lt;/p&gt;
&lt;p&gt;先來談談 gooey 的作法，首先要先有兩層 layer，內層將物件模糊 blur，而外層處理亮度 brightness 跟對比度 contrast，接著神奇的事情就會發生了，可以參考以下範例：&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p data-height=&quot;380&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;lIBAg&quot; data-default-tab=&quot;result&quot; data-user=&quot;chriscoyier&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/chriscoyier/pen/lIBAg/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Blur vs Contrast&lt;/a&gt; by Chris Coyier (&lt;a href=&quot;http://codepen.io/chriscoyier&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@chriscoyier&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;上層是只加了模糊，可以看到因為模糊的關係，物件間的顏色互相疊加在一起；下層則是調整對比後的結果，將模糊過的結果保留重疊及原本顏色較深的部分，濾掉顏色較淺的部分，物件間的部分就因此連起來了，若是加上動畫，效果就會更好：&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p data-height=&quot;330&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;lFdHu&quot; data-default-tab=&quot;result&quot; data-user=&quot;lbebber&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/lbebber/pen/lFdHu/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gooey Pagination&lt;/a&gt; by Lucas Bebber (&lt;a href=&quot;http://codepen.io/lbebber&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@lbebber&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;這樣看似已經完成了，但實際上會遇到兩個問題：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;內部物件模糊掉，使用了 &lt;code&gt;filter: blur();&lt;/code&gt; 後，子元素無一倖免。&lt;/li&gt;
&lt;li&gt;更改顏色，所有更改顏色都會因對比而偏移掉。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;原本就是卡在這裡，不管怎麼調整都沒辦法有效的解決這兩項，後來看到了 &lt;a href=&quot;http://tympanus.net/codrops/2015/03/10/creative-gooey-effects/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Creative Gooey Effects&lt;/a&gt; 這篇才知道可以利用 &lt;code&gt;fliter: url();&lt;/code&gt; 配合 SVG filters 來解決這兩個問題，且用法也很簡單。此方法在 &lt;a href=&quot;https://css-tricks.com/gooey-effect/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Gooey Effect&lt;/a&gt; 中描述的更加清楚，包含在 &lt;code&gt;feColorMatrix&lt;/code&gt; 中的 values 為什麼是下表也有描述，若是對他的敘述不清楚的話可以先看 &lt;a href=&quot;http://www.oxxostudio.tw/articles/201406/svg-11-filter-feColorMatrix.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SVG 研究之路 (11) - filter:feColorMatrix&lt;/a&gt; 稍微釐清一下。&lt;/p&gt;
&lt;p&gt;簡單來說，若是沒有特別需求，就去調整 color matrix 中的 alpha channel (A) 跟 plus(+) 中值來得到自己想要的結果。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;*&lt;/th&gt;
&lt;th&gt;R&lt;/th&gt;
&lt;th&gt;G&lt;/th&gt;
&lt;th&gt;B&lt;/th&gt;
&lt;th&gt;A&lt;/th&gt;
&lt;th&gt;+&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;R&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;G&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;-7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以下是我在測試時寫的比較：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用純 CSS 處理，背景與下一項的顏色設定相同，但呈現出 &lt;code&gt;#0000FF&lt;/code&gt; 的藍色。&lt;br&gt;&lt;p data-height=&quot;200&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;mPeEEG&quot; data-default-tab=&quot;result&quot; data-user=&quot;ssk7833&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/ssk7833/pen/mPeEEG/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Rotate loading (bad with and text)&lt;/a&gt; by North (&lt;a href=&quot;http://codepen.io/ssk7833&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@ssk7833&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;用 SVG 處理，上一版的改良，在元素中放文字將會正常顯示。&lt;br&gt;&lt;p data-height=&quot;200&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;dMGpXQ&quot; data-default-tab=&quot;result&quot; data-user=&quot;ssk7833&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/ssk7833/pen/dMGpXQ/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gooey rotate loading (good with background and text)&lt;/a&gt; by North (&lt;a href=&quot;http://codepen.io/ssk7833&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@ssk7833&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;將第二版的顏色稍加調整，移除 &lt;code&gt;feBlend&lt;/code&gt; 後由於失去 &lt;code&gt;SourceGraphic&lt;/code&gt; 的關係，文字將不會正常顯示，但此效果我更喜歡。&lt;br&gt;&lt;p data-height=&quot;200&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;oxbBRy&quot; data-default-tab=&quot;result&quot; data-user=&quot;ssk7833&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/ssk7833/pen/oxbBRy/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gooey rotate loading (good with only background)&lt;/a&gt; by North (&lt;a href=&quot;http://codepen.io/ssk7833&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@ssk7833&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在寫上述三項測試時，自己也試過許多不同的組合，對 SVG filters 也多了許多理解，而在 gooey 相關的效果基本上就是 &lt;code&gt;feGaussianBlur&lt;/code&gt;、&lt;code&gt;feColorMatrix&lt;/code&gt; 和 &lt;code&gt;feBlend&lt;/code&gt; 的變化所組成，未來若遇到類似需求時應該都能迎刃而解～&lt;/p&gt;
&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://css-tricks.com/shape-blobbing-css/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shape Blobbing in CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.oxxostudio.tw/articles/201408/sticky-ball.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;噁心黏黏球( 純 CSS )&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://tympanus.net/codrops/2015/03/10/creative-gooey-effects/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Creative Gooey Effects&lt;/a&gt;  底下有幾個動畫範例值得一看&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://css-tricks.com/gooey-effect/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Gooey Effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.oxxostudio.tw/articles/201406/svg-11-filter-feColorMatrix.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SVG 研究之路 (11) - filter:feColorMatrix&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在試著實作 gooey 效果，看了一些介紹後知道了 gooey 的原理，本以為在實作上可以一路順風，但果然沒有這麼簡單，還好最後有找到解決方法。&lt;/p&gt;
&lt;p&gt;先來談談 gooey 的作法，首先要先有兩層 layer，內層將物件模糊 blur，而外層處理亮度 brigh
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="CSS" scheme="http://ssk7833.github.io/blog/tags/CSS/"/>
    
      <category term="SVG" scheme="http://ssk7833.github.io/blog/tags/SVG/"/>
    
      <category term="gooey" scheme="http://ssk7833.github.io/blog/tags/gooey/"/>
    
  </entry>
  
  <entry>
    <title>使用 Travis CI 自動部署 GitHub Pages</title>
    <link href="http://ssk7833.github.io/blog/2016/01/21/using-TravisCI-to-deploy-on-GitHub-pages/"/>
    <id>http://ssk7833.github.io/blog/2016/01/21/using-TravisCI-to-deploy-on-GitHub-pages/</id>
    <published>2016-01-21T08:23:05.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;先前看到了&lt;a href=&quot;https://samkuo.me/post/2015/09/why-developers-should-have-a-blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程式人就該有個部落格&lt;/a&gt;，想想這個主意不錯，之前有在 Blogger 及 Logdown 零星寫了幾篇文章，也曾經想過自己架靜態或動態網站，只是一直沒有去做，看完這篇讓我更有動力去做這件事。研究一陣子後我選擇直接利用 Github pages 來發佈網站，於是開始調查 &lt;a href=&quot;https://www.staticgen.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StaticGen&lt;/a&gt; 上排名較高的幾個，而最後挑選了 &lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;：是台灣人寫的，而且是 javascript。&lt;/p&gt;
&lt;p&gt;自己完成 Hexo 初步設定，產生第一版頁面後不久就遇到兩個問題：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;能不能將每次都要發佈的這個動作自動化。&lt;/li&gt;
&lt;li&gt;如果我換到其他電腦上，而其他電腦可能沒有 Hexo 時會很不方便，可能要選擇安裝一次 node.js 及 hexo，甚至根本沒安裝權限；若是能直接利用 GitHub 線上編輯 markdown 文件就能產生的話有多棒。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因為這兩點，我決定開始我的 Travis CI 初體驗。&lt;/p&gt;
&lt;h2 id=&quot;關於-Travis-CI&quot;&gt;&lt;a href=&quot;#關於-Travis-CI&quot; class=&quot;headerlink&quot; title=&quot;關於 Travis CI&quot;&gt;&lt;/a&gt;關於 Travis CI&lt;/h2&gt;&lt;p&gt;簡單來說，持續整合 (Continuous integration，縮寫為 CI)是在開發過程中，有任何變更都自動且持續的整合到目前的版本中。整合包含測試及發佈，可根據自訂的測試內容產生可視化的結果，方便開發人員快速找到問題所在，並且在測試通過後自動執行已撰寫的腳本，以達到自動發佈的功能。要達到持續整合，需有一個伺服器專門監聽程式版本的改動，一旦有變動就執行事先撰寫的測試及部署腳本。&lt;/p&gt;
&lt;p&gt;Travis CI 提供在 GitHub 上的任何公開的 repo 都可以免費的使用 CI 服務，Travis CI 與 GitHub 的適性很好（也只提供使用 GitHub 帳號登入），廣受 GitHub 上使用，因此在這裡也使用 Travis CI 所提供的服務來產生靜態網站。&lt;/p&gt;
&lt;p&gt;初次接觸 CI 可以先從官方提供的範例檔開始：&lt;a href=&quot;https://docs.travis-ci.com/user/for-beginners&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Travis CI for Complete Beginners&lt;/a&gt;，以便能有一些基礎概念，接著再開始挑選 &lt;a href=&quot;https://docs.travis-ci.com/user/getting-started/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Getting started&lt;/a&gt; 中的項目學習設定與操作。&lt;/p&gt;
&lt;p&gt;我的目標很明確，想要弄出在同一個 repo 下，一個 branch 是放 source code 的 master，另一個 branch 則是發佈用的 gh-pages。每當我 master 有更新時 gh-pages 也會自動透過 Travis CI 更新，如下圖，經過幾次測試後終於成功，最後 branch 的點呈現交錯成長：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/sourceTree.png&quot; alt=&quot;branch&quot; title=&quot;branch&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;給予-Travis-CI-push-的權限&quot;&gt;&lt;a href=&quot;#給予-Travis-CI-push-的權限&quot; class=&quot;headerlink&quot; title=&quot;給予 Travis CI push 的權限&quot;&gt;&lt;/a&gt;給予 Travis CI push 的權限&lt;/h2&gt;&lt;p&gt;由於發佈到 gh-pages 要交給 Travis CI 處理，需要 GitHub 帳號的驗證，而在 public repo 下不可能直接把密碼直接放在 source 中，因此在這裡選擇 GitHub 所提供的 &lt;a href=&quot;https://github.com/settings/tokens&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Personal access tokens&lt;/a&gt; 來處理權限的問題，用 Personal access token 的好處在於是個人創建的，可以隨時刪除 token 以取消存取權限，再加上 Travis CI 在文件中提到的 &lt;a href=&quot;https://docs.travis-ci.com/user/encryption-keys/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Encryption keys&lt;/a&gt; 來處理敏感資料，通過環境變數的方式傳遞給腳本，以避免密碼及 token 公開出來。&lt;/p&gt;
&lt;p&gt;首先先產生一個 access token，因為目的只有讓 Travis CI 可以讀取 public repo，因此勾選 public repo 即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/personalAccessToken.png&quot; alt=&quot;personal access token&quot; title=&quot;personal access token&quot;&gt;&lt;/p&gt;
&lt;p&gt;接著先將產生的 token 妥善複製，未來只能 regenerate 一組新的 token，再也無法從 GitHub 調出目前這組。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/generatedToken.png&quot; alt=&quot;generated token&quot; title=&quot;generated token&quot;&gt;&lt;/p&gt;
&lt;p&gt;接著利用 Travis CLI 來處理敏感資料，較方便的方式是利用 ruby 的 gem 來安裝 Travis CLI：&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gem &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; travis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安裝完畢後，接著到想設定 Travis CI 的 repo 目錄中執行 &lt;code&gt;travis login&lt;/code&gt; 來驗證身分，之後執行 &lt;code&gt;travis init&lt;/code&gt;，會先詢問使用的語言，且產生 &lt;code&gt;.travis.yml&lt;/code&gt;，接著在同一目錄下執行此指令，記得將 &lt;code&gt;&amp;lt;Personal Access Token&amp;gt;&lt;/code&gt; 取代成先前複製的那組：&lt;/p&gt;
&lt;figure class=&quot;highlight vhdl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;travis encrypt &lt;span class=&quot;attribute&quot;&gt;&#39;GIT_NAME&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;North&quot;&lt;/span&gt; GIT_EMAIL=ssk7833@gmail.com GH_TOKEN=&amp;lt;Personal &lt;span class=&quot;keyword&quot;&gt;Access&lt;/span&gt; Token&amp;gt;&#39; &lt;span class=&quot;comment&quot;&gt;--add&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;即可看到在 .travis.yml 中多了&lt;/p&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;env&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;global&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;secrue&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;long secure base64 string&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這一串將在每次 CI 進行時設定環境變數，這邊環境變數即可在接下來的腳本中使用。&lt;/p&gt;
&lt;h2 id=&quot;設定-travis-yml-檔&quot;&gt;&lt;a href=&quot;#設定-travis-yml-檔&quot; class=&quot;headerlink&quot; title=&quot;設定 .travis.yml 檔&quot;&gt;&lt;/a&gt;設定 .travis.yml 檔&lt;/h2&gt;&lt;p&gt;編輯 .travis.yml 前，可以先閱讀一下 Travis CI 的 &lt;a href=&quot;https://docs.travis-ci.com/user/customizing-the-build/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Build Lifecycle&lt;/a&gt;，以下是我粗略的設定：&lt;/p&gt;
&lt;figure class=&quot;highlight http&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;language&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;node_js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;haml&quot;&gt;node_js:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;string&quot;&gt;&quot;4.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;env:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  global:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    secure:  &quot;long secure base64 string&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;install:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -&lt;span class=&quot;ruby&quot;&gt; npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;script:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  # Set Git config&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -&lt;span class=&quot;ruby&quot;&gt; git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;$GIT_NAME&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt; git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;$GIT_EMAIL&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt; git config --global push.default simple&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt; git clone --depth &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; --branch gh-pages &lt;span class=&quot;symbol&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;regexp&quot;&gt;/$GH_TOKEN@github.com/ssk&lt;/span&gt;7833/blog public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  # Generate Hexo static pages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  -&lt;span class=&quot;ruby&quot;&gt; npm run generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt; cd public&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt; git add -&lt;span class=&quot;constant&quot;&gt;A&lt;/span&gt; .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt; &lt;span class=&quot;constant&quot;&gt;MESSAGE&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;`date +\ %Y-%m-%d\ %H:%M:%S`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt; git commit -m &lt;span class=&quot;string&quot;&gt;&quot;Site updated:$MESSAGE&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  -&lt;span class=&quot;ruby&quot;&gt; git push --quiet&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;node.js 的套件 dependencies 都已先用 package.json 存下，因此在 install 的部分只需使用 npm install；在 script 中完成部分指令，但因為沒特殊需求，只有設定 git 及產生靜態頁面，因此讓它一路到底。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：git push 時一定要加 &lt;code&gt;--quiet&lt;/code&gt;，否則先前設定的 Personal Access Token 將會印出，這樣就失去加密意義了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;結果可以在 Travis CI 的網頁上看到，可以瀏覽各次的狀況，像我最近的 &lt;a href=&quot;https://travis-ci.org/ssk7833/blog/builds/101307260&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;push 結果&lt;/a&gt;及先前測試的&lt;a href=&quot;https://travis-ci.org/ssk7833/blog/builds/100311173&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;失敗結果&lt;/a&gt;都可以在 Build history 中瀏覽到。&lt;/p&gt;
&lt;h2 id=&quot;在-GitHub-上發佈／編輯&quot;&gt;&lt;a href=&quot;#在-GitHub-上發佈／編輯&quot; class=&quot;headerlink&quot; title=&quot;在 GitHub 上發佈／編輯&quot;&gt;&lt;/a&gt;在 GitHub 上發佈／編輯&lt;/h2&gt;&lt;p&gt;若是設定無誤，接下來要發佈或編輯文章即可直接利用 GitHub 網頁版來作編輯，不需要擔心作業系統沒有安裝相關環境而無法發佈或編輯文章囉！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/editPost.png&quot; alt=&quot;edit post&quot; title=&quot;edit post&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE：&lt;/strong&gt;發現 Travis CI 發佈的結果可能會跟實際時間對不起來，如圖：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/TZIncorrect.png&quot; alt=&quot;time zone incorrect&quot; title=&quot;time zone incorrect&quot;&gt;&lt;/p&gt;
&lt;p&gt;後來發現是因為我在 Hexo 中設定了時區為 Asia/Taipei，而 Travis CI 所提供的機器時區不一樣而造成的，將 Travis CI 一樣設定為 Asia/Taipei 即可解決問題。&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;before_install:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  - &lt;span class=&quot;preprocessor&quot;&gt;export&lt;/span&gt; TZ&lt;span class=&quot;label&quot;&gt;=Asia&lt;/span&gt;/Taipei&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;這是我最後的 &lt;a href=&quot;https://github.com/ssk7833/blog/blob/master/.travis.yml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;.travis.yml 設定&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;參考資料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://farseerfc.me/zhs/travis-push-to-github-pages-blog.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用 Travis-CI 生成 Github Pages 博客 &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://changyuheng.me/2015/when-hexo-static-site-meets-github-pages-and-travis-ci/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;When Hexo Meets GitHub Pages and Travis CI plus Raspberry Pi&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;先前看到了&lt;a href=&quot;https://samkuo.me/post/2015/09/why-developers-should-hav
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="gf-pages" scheme="http://ssk7833.github.io/blog/tags/gf-pages/"/>
    
      <category term="hexo" scheme="http://ssk7833.github.io/blog/tags/hexo/"/>
    
      <category term="travis ci" scheme="http://ssk7833.github.io/blog/tags/travis-ci/"/>
    
  </entry>
  
  <entry>
    <title>HTML5 fullscreen API 將 iframe 以全螢幕顯示</title>
    <link href="http://ssk7833.github.io/blog/2016/01/10/show-iframe-in-fullscreen-by-html5-fullscreen-api/"/>
    <id>http://ssk7833.github.io/blog/2016/01/10/show-iframe-in-fullscreen-by-html5-fullscreen-api/</id>
    <published>2016-01-09T20:10:05.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;最近因為有把 iframe 內容以全螢幕顯示的需求，因此研究了一下 HTML5 fullscreen API。已有現成的 library 可以用如 &lt;a href=&quot;https://sindresorhus.com/screenfull.js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;screenfull.js&lt;/a&gt; 及 &lt;a href=&quot;https://brad.is/coding/BigScreen/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BigScreen&lt;/a&gt;，但大致上並不難，因此我選擇了純 javascript 來撰寫看看。&lt;/p&gt;
&lt;p&gt;要全螢幕其實並不難，只要呼叫 &lt;code&gt;requestFullscreen()&lt;/code&gt; 即可做到，以下是簡易範例：&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; button = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;#container .button&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;button.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, fullscreen);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function fullscreen() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// check if fullscreen mode is available&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.fullscreenEnabled ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.webkitFullscreenEnabled ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.mozFullScreenEnabled ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.msFullscreenEnabled) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// which element will be fullscreen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; iframe = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;#container iframe&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Do fullscreen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (iframe.requestFullscreen) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      iframe.requestFullscreen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (iframe.webkitRequestFullscreen) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      iframe.webkitRequestFullscreen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (iframe.mozRequestFullScreen) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      iframe.mozRequestFullScreen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (iframe.msRequestFullscreen) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      iframe.msRequestFullscreen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;querySelector&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;.error&#39;&lt;/span&gt;).innerHTML = &lt;span class=&quot;string&quot;&gt;&#39;Your browser is not supported&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此範例即可讓當所選擇的 &lt;code&gt;#container .button&lt;/code&gt; 被點擊時，讓 &lt;code&gt;#container iframe&lt;/code&gt; 全螢幕。&lt;/p&gt;
&lt;p&gt;但因為 iframe 的內容並非我可以控制的，有些 iframe 的內容沒有處理 RWD，因此當頁面縮放時可能會呈現未預期的效果，如：&lt;a href=&quot;http://codepen.io/kanaparty/pen/eJYXeZ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ぶつからないように動くビークル&lt;/a&gt;（找了一下 codepen 才找到一個可用範例）。要做到這點，我目前選擇當 iframe 被全螢幕時則重新載入一次，當然，當 iframe 從全螢幕離開時也會再 resize 一次，因此也要注意離開全螢幕時也得處理。&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// reload&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;iframe&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.src&lt;/span&gt; = &lt;span class=&quot;tag&quot;&gt;iframe&lt;/span&gt;.src&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;原本我認為應將重新載入寫在 request fullscreen 之後，而當觸發 keydown event 時再觸發一次重新載入，後來發現在全螢幕時按下 ESC 時 keydown event 都不會被觸發(chrome, firefox)，而按下 F11 則是 Firefox 會觸發而 Chrome 不會，因此認為這應該不是個好寫法。&lt;/p&gt;
&lt;p&gt;後來在 &lt;a href=&quot;http://www.sitepoint.com/use-html5-full-screen-api/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to Use the HTML5 Full-Screen API (Again)&lt;/a&gt; 發現有 fullscreenchange event 可以用，因此也改用這個，原本放在全螢幕後的重新載入也改成放於 event listener 內，程式碼也簡潔多了！&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// when you are in fullscreen, ESC and F11 may not be trigger by keydown listener.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// so don&#39;t use it to detect exit fullscreen&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;keydown&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;key press&#39;&lt;/span&gt; + e.keyCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// detect enter or exit fullscreen mode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;webkitfullscreenchange&#39;&lt;/span&gt;, fullscreenChange);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;mozfullscreenchange&#39;&lt;/span&gt;, fullscreenChange);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;fullscreenchange&#39;&lt;/span&gt;, fullscreenChange);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;MSFullscreenChange&#39;&lt;/span&gt;, fullscreenChange);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fullscreenChange&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.fullscreenEnabled ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.webkitIsFullScreen ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.mozFullScreen ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.msFullscreenElement) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;enter fullscreen&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;exit fullscreen&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// force to reload iframe once to prevent the iframe source didn&#39;t care about trying to resize the window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// comment this line and you will see&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; iframe = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;iframe&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  iframe.src = iframe.src;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以下為測試的範例，可以試著把 &lt;code&gt;iframe.src = iframe.src;&lt;/code&gt; 註解掉，即可看到改造前後的差異：&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p data-height=&quot;268&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;mVOXXp&quot; data-default-tab=&quot;result&quot; data-user=&quot;ssk7833&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/ssk7833/pen/mVOXXp/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fullscreen API on iframe&lt;/a&gt; by North (&lt;a href=&quot;http://codepen.io/ssk7833&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@ssk7833&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;
&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;參考資料：&lt;br&gt;&lt;a href=&quot;http://codepen.io/kanaparty/pen/eJYXeZ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ぶつからないように動くビークル&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Using fullscreen mode - Web APIs | MDN&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.sitepoint.com/use-html5-full-screen-api/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to Use the HTML5 Full-Screen API (Again) - SitePoint&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近因為有把 iframe 內容以全螢幕顯示的需求，因此研究了一下 HTML5 fullscreen API。已有現成的 library 可以用如 &lt;a href=&quot;https://sindresorhus.com/screenfull.js/&quot; target=&quot;_blan
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="javascript" scheme="http://ssk7833.github.io/blog/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Facebook Graph API 取得大頭貼照</title>
    <link href="http://ssk7833.github.io/blog/2015/08/25/facebook-graph-api-get-picture/"/>
    <id>http://ssk7833.github.io/blog/2015/08/25/facebook-graph-api-get-picture/</id>
    <published>2015-08-24T19:11:56.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;要取得大頭貼照，如果使用 API request ，加上 picture 即可得到大頭貼照，如：&lt;code&gt;me?fields=id,name,picture&lt;/code&gt;，即可在回傳的 JSON 中取得圖片的位址，但這時取回來的圖片會比正常大小還要小，而且此方法還需要 access_token。&lt;/p&gt;
&lt;p&gt;要取得不同大小的大頭貼照，有個更輕鬆的方法：&lt;code&gt;http://graph.facebook.com/{id}/picture?type=normal&lt;/code&gt; 直接使用此網址，將 id 換成想呈現的 userId 即可，此網址將會 redirect 到對應的圖片位址，且此方法不需要 access_token。&lt;/p&gt;
&lt;p&gt;在這個網址中，type 可為 &lt;code&gt;small&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;album&lt;/code&gt;, &lt;code&gt;large&lt;/code&gt;, &lt;code&gt;square&lt;/code&gt;，分別為不同解析度的照片大小。&lt;/p&gt;
&lt;p&gt;以 Facebook 的創始人 Mark Zuckerberg 為例，userId 為 4，則要顯示的網址如下：&lt;br&gt;50*50:&lt;br&gt;&lt;code&gt;http://graph.facebook.com/4/picture?type=small&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://graph.facebook.com/4/picture?type=small&quot; alt=&quot;Small&quot; title=&quot;Mark Zuckerberg&quot;&gt;&lt;br&gt;&lt;code&gt;http://graph.facebook.com/4/picture?type=album&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://graph.facebook.com/4/picture?type=album&quot; alt=&quot;Album&quot; title=&quot;Mark Zuckerberg&quot;&gt;&lt;br&gt;&lt;code&gt;http://graph.facebook.com/4/picture?type=square&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://graph.facebook.com/4/picture?type=square&quot; alt=&quot;Square&quot; title=&quot;Mark Zuckerberg&quot;&gt;&lt;/p&gt;
&lt;p&gt;100*100:&lt;br&gt;&lt;code&gt;http://graph.facebook.com/4/picture?type=normal&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://graph.facebook.com/4/picture?type=normal&quot; alt=&quot;Normal&quot; title=&quot;Mark Zuckerberg&quot;&gt;&lt;/p&gt;
&lt;p&gt;200*200:&lt;br&gt;&lt;code&gt;http://graph.facebook.com/4/picture?type=large&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://graph.facebook.com/4/picture?type=large&quot; alt=&quot;Large&quot; title=&quot;Mark Zuckerberg&quot;&gt;&lt;/p&gt;
&lt;p&gt;不能理解的是為什麼 small, album, square 所得到的大小都一樣，還不知道差在哪。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;要取得大頭貼照，如果使用 API request ，加上 picture 即可得到大頭貼照，如：&lt;code&gt;me?fields=id,name,picture&lt;/code&gt;，即可在回傳的 JSON 中取得圖片的位址，但這時取回來的圖片會比正常大小還要小，而且此方法還需要 a
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Facebook-Graph-API" scheme="http://ssk7833.github.io/blog/tags/Facebook-Graph-API/"/>
    
  </entry>
  
  <entry>
    <title>Facebook Graph API 回傳指定語言/地區化姓名</title>
    <link href="http://ssk7833.github.io/blog/2015/07/12/facebook-graph-api-returns-language-specific-name/"/>
    <id>http://ssk7833.github.io/blog/2015/07/12/facebook-graph-api-returns-language-specific-name/</id>
    <published>2015-07-12T10:49:43.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;玩 Facebook Graph API 玩了一陣子才發現回傳的姓名總是是英文的，才想到若是有回傳中文姓名的需求時該怎麼辦，如此下去一找才發現關鍵字是 &lt;a href=&quot;https://www.facebook.com/help/217868321565724&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Language-specific name&lt;/a&gt;，而要如何在 Facebook Graph API 中顯示為中文則可以參考這篇中的 locale：&lt;a href=&quot;https://developers.facebook.com/docs/graph-api/using-graph-api/v2.0#readmodifiers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Modifying API Requests&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;其實只要在 API request 中加上 &lt;code&gt;&amp;amp;locale=zh_TW&lt;/code&gt; 即可得到中文姓名，如：&lt;code&gt;me?fields=id,name&amp;amp;locale=zh_TW&lt;/code&gt;，只是有趣的是我稍微測了一下 locale 給以開頭 &lt;code&gt;en_&lt;/code&gt; 以外的任何值都會取得中文名稱，還以為預設會以英文為主。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;玩 Facebook Graph API 玩了一陣子才發現回傳的姓名總是是英文的，才想到若是有回傳中文姓名的需求時該怎麼辦，如此下去一找才發現關鍵字是 &lt;a href=&quot;https://www.facebook.com/help/217868321565724&quot; targe
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Facebook-Graph-API" scheme="http://ssk7833.github.io/blog/tags/Facebook-Graph-API/"/>
    
      <category term="localization" scheme="http://ssk7833.github.io/blog/tags/localization/"/>
    
  </entry>
  
  <entry>
    <title>使用 Parse.com Cloud Code Hosting 進行 Facebook 登入存取 3</title>
    <link href="http://ssk7833.github.io/blog/2015/07/02/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-3/"/>
    <id>http://ssk7833.github.io/blog/2015/07/02/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-3/</id>
    <published>2015-07-01T16:11:49.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;繼上一篇成功截取出使用者資料後，發現除了基本資料外，朋友、按讚的資訊等資料其實都抓不出來，原因是因為沒有給予 app 存取這些資訊的權限。要求權限的話可以透過 OAuth 來索取 access token ，其範例網址如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://www.facebook.com/dialog/oauth?client_id={appId}&amp;amp;redirect_uri={redirectURI}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/profile.png&quot; alt=&quot;Profile&quot; title=&quot;Profile&quot;&gt;&lt;br&gt;&lt;img src=&quot;/blog/images/profile02.png&quot; alt=&quot;Profile details&quot; title=&quot;Profile Details&quot;&gt;&lt;/p&gt;
&lt;p&gt;這是一個截取基本權限的網址，appId 指的是每一個 app 獨立的 ID，而 redirectURI 是當 OAuth 通過後，會送發一串 code 到這個 redirectURI 去，而若需要要求其他權限，可以增加 scope 屬性如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://www.facebook.com/dialog/oauth?client_id={appId}&amp;amp;redirect_uri={redirectURI}&amp;amp;scope={accessPermissions}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;這個 scope 以逗號作為分隔，填在裡面的將會在 Facebook dialog 中要求權限。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/user_friends.png&quot; alt=&quot;Profile with friends&quot; title=&quot;Profile with friends&quot;&gt;&lt;br&gt;&lt;img src=&quot;/blog/images/user_friends02.png&quot; alt=&quot;Profile with friends details&quot; title=&quot;Profile with friends details&quot;&gt;&lt;/p&gt;
&lt;p&gt;講了這麼多，但以&lt;a href=&quot;http://north.logdown.com/posts/280761-using-parsecom-cloud-code-hosting-to-log-in-with-facebook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;第一篇&lt;/a&gt;中使用了&lt;a href=&quot;https://github.com/ParsePlatform/parse-facebook-user-session&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parse-facebook-user-session&lt;/a&gt;該怎麼修改呢？稍微翻了它的 source code 後發現它在實作上並沒有保留 scope 欄位，因此我便把 scope 加上去了，可以由此瀏覽：&lt;a href=&quot;https://github.com/ssk7833/parse-facebook-user-session&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parse-facebook-user-session&lt;/a&gt;&lt;br&gt;&lt;strong&gt;UPDATE：&lt;/strong&gt;原 repository 已經將此功能 merge上 去，直接使用原本的即可&lt;/p&gt;
&lt;p&gt;使用方式的話則與先前的沒什麼差別，只是可以選擇多填一個 scope 欄位，範例如下：&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.use&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;parseFacebookUserSession&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;clientId&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;YOUR_FB_CLIENT_ID&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;appSecret&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;YOUR_FB_APP_SECRET&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;redirectUri&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;/login&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;scope&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;user_friends,user_likes&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 要求friends與like資訊&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;至於有哪些權限可以要求，可以當&lt;a href=&quot;https://developers.facebook.com/tools/explorer/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developers.facebook.com/tools/explorer/&lt;/a&gt;中，點選 Get Access Token 來參考，並且在下面做測試。&lt;/p&gt;
&lt;p&gt;不過要注意的有像是 &lt;code&gt;user_friends&lt;/code&gt; 這項，如果在 API v2.0 以上的版本上要求資訊的話，只會列出同樣有授權此 app 的好友出來，開了幾個 test users 測試的確如此：&lt;/p&gt;
&lt;p&gt;很可憐沒有朋友授權此 APP：&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;104342733239984&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;Hello world&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;friends&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;[]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;summary&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;total_count&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到 summary 中，total_count 為 1，但 data 中無資料。&lt;/p&gt;
&lt;p&gt;有朋友也授權此 APP：&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;1421116644879628&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;Doraemon Cat&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &quot;&lt;span class=&quot;attribute&quot;&gt;friends&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;data&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;Open Graph Test User&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;1414470195545509&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&lt;span class=&quot;attribute&quot;&gt;name&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;Monkey D Luffy&quot;&lt;/span&gt;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &quot;&lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;100347703641647&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;paging&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;next&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;https://graph.facebook.com/1421116644879628/friends?limit=25&amp;amp;offset=25&amp;amp;__after_id=enc_AdAMpWdRxSLZAvND6bEd0htyyGsZAZBvzP6jzoAIZBKS9EiBSndZCNZC3S1AC5TEYchbuuBSV0xvg7ziwO4Cdt843yZApF&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&lt;span class=&quot;attribute&quot;&gt;summary&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &quot;&lt;span class=&quot;attribute&quot;&gt;total_count&lt;/span&gt;&quot;: &lt;span class=&quot;value&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到此 test user 有兩個朋友也都有安裝此 app。&lt;/p&gt;
&lt;p&gt;至於怎麼得到 test user 的 access token，我是利用 Parse.com 的 API Console，Endpoint 填入 users 且 Use Master Key 改成 Yes，send request 後即可在 response 中看到 access token，即可複製此 token 到 &lt;a href=&quot;https://developers.facebook.com/tools/explorer/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://developers.facebook.com/tools/explorer/&lt;/a&gt; 中做測試，如下圖。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/APIconsole02.png&quot; alt=&quot;API console&quot; title=&quot;API console&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;繼上一篇成功截取出使用者資料後，發現除了基本資料外，朋友、按讚的資訊等資料其實都抓不出來，原因是因為沒有給予 app 存取這些資訊的權限。要求權限的話可以透過 OAuth 來索取 access token ，其範例網址如下：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://www
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="CloudCode" scheme="http://ssk7833.github.io/blog/tags/CloudCode/"/>
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Parse.com" scheme="http://ssk7833.github.io/blog/tags/Parse-com/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>使用 Parse.com Cloud Code Hosting 進行 Facebook 登入存取 2</title>
    <link href="http://ssk7833.github.io/blog/2015/06/20/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-2/"/>
    <id>http://ssk7833.github.io/blog/2015/06/20/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-2/</id>
    <published>2015-06-20T15:43:39.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;延續上一篇，成功使用 Facebook 登入 Parse.com 的使用者資訊後，接著就是怎麼從使用者資訊中取得 Facebook 的資料了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/user.png&quot; alt=&quot;User&quot; title=&quot;User&quot;&gt;&lt;br&gt;以上圖的 Facebook Test Users 為例，建立完的使用者可以由 Parse.com 的 Data 中看到，不過 authData 卻只顯示了 Facebook 的 ID，因此我們可以先透過 API Console 來對 users 作存取，這裡要注意的是 Use Master Key 記得要選 Yes，否則會沒有權限看 authData 的內容；users 後面的參數為 objectId，若不放置則會列出全部符合的資料。&lt;br&gt;&lt;img src=&quot;/blog/images/APIconsole.png&quot; alt=&quot;API console&quot; title=&quot;API console&quot;&gt;&lt;br&gt;在 Response 中的內容：&lt;br&gt;&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;collection&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;authData&quot;&lt;/span&gt;: &lt;span class=&quot;collection&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;facebook&quot;&lt;/span&gt;: &lt;span class=&quot;collection&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 不要想對這組 access_token 亂來，因為是 test user XD&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;access_token&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;CAAMCk3Pv7SkBAEjfvRaG4SrC8k3CXak1843iisuUJiIK9gYV9PNFRraXi9gxYVBJO83zsvzFO91dcACevKwinxAVPNCUeEv0UPWsmv7DZBlqPjtZCCnEBcMBKpU7ikoj9OKo1ZCwzi3wmTycsB2avHT1SiBxLUF5ZAHTaT9XDNtz1phGZCk0lltOY5agj0JGQ9ezNGmOsvUmdpKFASx5K&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;expiration_date&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2015-08-15T17:52:46.495Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&quot;id&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;118563748477765&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;createdAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2015-06-16T17:52:48.623Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;Super Mario&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;objectId&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;wmVm7Qb1Fc&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;sessionToken&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;jEKKzfbDcIN0CmBIvsdZR9Aoc&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;updatedAt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2015-06-17T07:57:08.934Z&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;3GwDpgmuqmfnyGYINNI27W9fO&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;已經知道存放在哪裡之後，接下來就是利用 cloud code function 建立資料存取了！在這裡我用名字與圖片作範例，參考了 &lt;a href=&quot;http://stackoverflow.com/a/16445118/4968420&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow 這篇的回答&lt;/a&gt;稍微修改了一下：&lt;br&gt;當然，別忘記 userMasterKey…&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Parse.Cloud.define(&lt;span class=&quot;string&quot;&gt;&quot;facebook&quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(request, response)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Parse.Cloud.useMasterKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Parse.Query(Parse.User).&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(request.params.user_id).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(user)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; authData = user.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;authData&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Quit early for users who aren&#39;t linked with Facebook&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (authData === &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt; || authData.facebook === &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      response.success(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Parse.Cloud.httpRequest(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      method: &lt;span class=&quot;string&quot;&gt;&quot;GET&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      url: &lt;span class=&quot;string&quot;&gt;&quot;https://graph.facebook.com/me&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      params: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        access_token: authData.facebook.access_token,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fields: &lt;span class=&quot;string&quot;&gt;&quot;name, friends&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;).then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(json)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response.success(json.data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Promises will let you bubble up any error, similar to a catch statement&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(error)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response.error(error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 Express 中 call 建立好的 cloud host function：&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;/test&#39;&lt;/span&gt;, fbLogin, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(req, res)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; user = Parse.User.current();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Parse.Cloud.run(&lt;span class=&quot;string&quot;&gt;&#39;facebook&#39;&lt;/span&gt;, &amp;#123; user_id: user.id &amp;#125;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(results)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      res.send(&lt;span class=&quot;string&quot;&gt;&#39;Congrats, you are logged in, &#39;&lt;/span&gt; + results.name + &lt;span class=&quot;string&quot;&gt;&#39;!&#39;&lt;/span&gt; +  &lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;img src=&quot;https://graph.facebook.com/&#39;&lt;/span&gt;+ results.id +&lt;span class=&quot;string&quot;&gt;&#39;/picture?type=normal&quot;&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    error: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(error)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      console.log(&lt;span class=&quot;string&quot;&gt;&quot;error :&quot;&lt;/span&gt; + error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;若是成功的話就能在自己的 URL 中看到如下圖的結果了！&lt;br&gt;&lt;img src=&quot;/blog/images/facebookSuccess.png&quot; alt=&quot;Facebook success&quot; title=&quot;Facebook success&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;延續上一篇，成功使用 Facebook 登入 Parse.com 的使用者資訊後，接著就是怎麼從使用者資訊中取得 Facebook 的資料了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/user.png&quot; alt=&quot;User&quot; title=&quot;User&quot;&gt;&lt;
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="CloudCode" scheme="http://ssk7833.github.io/blog/tags/CloudCode/"/>
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Parse.com" scheme="http://ssk7833.github.io/blog/tags/Parse-com/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>使用 Parse.com Cloud Code Hosting 進行 Facebook 登入存取 1</title>
    <link href="http://ssk7833.github.io/blog/2015/06/20/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-1/"/>
    <id>http://ssk7833.github.io/blog/2015/06/20/using-parsecom-cloud-code-hosting-to-log-in-with-facebook-1/</id>
    <published>2015-06-20T14:13:10.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://parse.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Parse.com&lt;/a&gt; 在 &lt;a href=&quot;https://parse.com/docs/tw/js/guide&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;javascript SDK&lt;/a&gt; 中提供了使用者的存取，其中包含 Facebook 的整合，但 javascript 終究是前端，有些不想讓 client end知道的還是放在後端處理比較好。然而 Parse.com 所提供的 cloud code 所使用的目前雖是 node.js，會讓開發者很想直接把 javascript SDK 的 Facebook 部分塞進去看能不能跑，乍看之下很合理，但實際上就是不行，因為以 Parse.com Javascript SDK在要求登入時會跳出另一個瀏覽器視窗以要求登入 Facebook 及權限給予，而這個視窗當然沒有辦法在 server end 中呈現並要求 client end 進行認證。&lt;/p&gt;
&lt;p&gt;在官方論壇上也有人發表過此問題：&lt;a href=&quot;https://www.parse.com/questions/interacting-with-the-facebook-api-in-cloud-code&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Interacting with the Facebook API in Cloud Code&lt;/a&gt;&lt;br&gt;所得到的回答是：&lt;br&gt;&lt;strong&gt;Unfortunately, the Facebook JavaScript SDK is not made to work outside of a browser, so using it directly from Cloud Code is not supported at the moment.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You can, however, get the authData from the current user in cloud code and use that to make a REST call to Facebook’s graph API manually.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因此我轉而研究使用OAuth方式來登入Facebook，除了跳轉出的頁面比較美觀外（不會產生另一個瀏覽器視窗），也不用擔心暴露資訊給clent end，參考資料有這兩篇：&lt;br&gt;&lt;a href=&quot;http://sweeteason.pixnet.net/blog/post/40581580-%E7%B6%B2%E7%AB%99%E5%88%A9%E7%94%A8-facebook-%E5%B8%B3%E8%99%9F%E7%99%BB%E5%85%A5-%28%E4%BD%BF%E7%94%A8-oauth%29&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;網站利用 Facebook 帳號登入 (使用 OAuth)&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://gigenchang.wordpress.com/2014/01/26/10%E5%88%86%E9%90%98%E7%90%86%E8%A7%A3oauth%E5%92%8Cfacebook%E7%99%BB%E5%85%A5%E5%8E%9F%E7%90%86/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;10分鐘理解OAuth和facebook登入原理&lt;/a&gt;&lt;br&gt;這篇以python Django framework實作，其實看code好像也蠻容易理解的：&lt;a href=&quot;http://nthn.me/posts/2012/facebook-registration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ghetto Facebook Registration with Django&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;後來正當我開始打算實作時，我找到了 &lt;a href=&quot;https://github.com/ParsePlatform/parse-facebook-user-session&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;parse-facebook-user-session&lt;/a&gt; ，原來 Parse.com 早就把這個寫好了，根本不用自己去寫了，只需要按照他的說明一步一步來就行了（吧）！&lt;/p&gt;
&lt;p&gt;結果證明事情果然不是我想的這麼簡單，不管怎麼弄就是跳出 &lt;strong&gt;209 invalid session token&lt;/strong&gt; ，花了一段時間後找到 Parse.com 自己發的文章 &lt;a href=&quot;https://www.parse.com/tutorials/session-migration-tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Session Migration Tutorial&lt;/a&gt; ，才知道把這個選項關掉就行了，我花了這麼久到底在幹麻！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/blog/images/userSessions.png&quot; alt=&quot;User sessions&quot; title=&quot;User sessions&quot;&gt;&lt;br&gt;總之，關閉這個選項後就成功了， Parse.com 的資料庫也會成功紀錄登入過的使用者，事情完成一半，其餘的就是登入的使用者資料該怎麼讀取出來了～&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE：&lt;/strong&gt;在GitHub上新增了 &lt;a href=&quot;https://loginexample.parseapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo&lt;/a&gt;：&lt;a href=&quot;https://github.com/ssk7833/Parse-Facebook-OAuth-login-example&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://parse.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Parse.com&lt;/a&gt; 在 &lt;a href=&quot;https://parse.com/docs/tw/js/guide&quot; target=&quot;_blank&quot; r
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="CloudCode" scheme="http://ssk7833.github.io/blog/tags/CloudCode/"/>
    
      <category term="Facebook" scheme="http://ssk7833.github.io/blog/tags/Facebook/"/>
    
      <category term="Parse.com" scheme="http://ssk7833.github.io/blog/tags/Parse-com/"/>
    
      <category term="node.js" scheme="http://ssk7833.github.io/blog/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>PHPWord 中文字顯示與下載問題</title>
    <link href="http://ssk7833.github.io/blog/2012/09/24/show-Chinese-character-and-download-issues-in-PHPWord/"/>
    <id>http://ssk7833.github.io/blog/2012/09/24/show-Chinese-character-and-download-issues-in-PHPWord/</id>
    <published>2012-09-24T11:52:10.000Z</published>
    <updated>2016-06-24T07:18:26.501Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;UPDATE 2016-06-24：&lt;/strong&gt;不曉得當初自己怎麼沒將這篇從 &lt;a href=&quot;http://northzo.blogspot.tw/2012/09/phpword.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Blogger&lt;/a&gt; 轉過來，總之現在是轉過來了，只將內文格式改為 Markdown，不確定內文是否還能使用，請閱讀者再自行斟酌一下（畢竟也是2012時發的文了）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;好久沒有更新了，看到上次更新的日期，我覺得我的文章產出可能會是一年一篇至兩篇（崩潰）&lt;/p&gt;
&lt;p&gt;這次碰上的問題主要是有個網頁委託內容包含需動態產生word檔以供使用者下載，因此我從先前接觸過的 &lt;a href=&quot;http://phpexcel.codeplex.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PHPExcel&lt;/a&gt; 而找到 &lt;a href=&quot;http://phpword.codeplex.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PHPWord&lt;/a&gt; 這套 library。先前使用 PHPExcel 時多半是為了利用簡單的方式來讀取 excel 檔中的內容，而並未自行產出一個獨立的 excel 檔，而這次算是剛好反過來了，要利用已有的內容來產生一個 word 檔。&lt;/p&gt;
&lt;p&gt;起初利用 PHPWord 0.6.2-1 Beta 所提供的 examples 成功建立 word 檔後覺得還蠻放心的，後來隨即也想到若是包含中文字時會不會有編碼問題，因此測了一下，果然變成亂碼了。後來隨即在官方討論區找到此篇文章：&lt;a href=&quot;http://phpword.codeplex.com/discussions/261365&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;how to properly handle UTF-8 ? (UTF8)&lt;/a&gt;，原來不只我遇到了這個問題～而根據底下的回覆表示以簡體中文編碼為例，須將 source code 中的 &lt;code&gt;$givenText = utf8_encode($text);&lt;/code&gt; 註解並換成 &lt;code&gt;$text = iconv(&amp;#39;gbk&amp;#39;,&amp;#39;utf-8&amp;#39;,&amp;#39;福建省泉州市惠南工业区北一路&amp;#39;);&lt;/code&gt; 即可解決問題，但這個方法只適用於範例中的 Template.php 才行，用在 Basic Table.php 則會出現亂碼。&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 原始寫法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$givenText&lt;/span&gt; = utf8_encode(&lt;span class=&quot;variable&quot;&gt;$text&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 修改後&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//$givenText = utf8_encode($text);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$text&lt;/span&gt; = iconv(&lt;span class=&quot;string&quot;&gt;&#39;gbk&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;福建省泉州市惠南工业区北一路&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;後來我將 source code 中所有包含 utf8_encode 的文件都以 &lt;code&gt;iconv&lt;/code&gt; 的方式去取代，結果算是成功沒出現亂碼了，但是 word 會在開啟時跳出錯誤警告，表示此檔案已損毀是否要進行修復（修復後沒大礙就是了）。憑著吹毛求疵斤斤計較的精神，也擔心使用者若看到損毀時會有疑慮，因此我又開始找其他方式去做，而最後找到的方法就是直接將有包含 utf8_encode 的文件都註解掉，改成直接賦予對應值，如下範例：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 原始寫法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$givenText&lt;/span&gt; = utf8_encode(&lt;span class=&quot;variable&quot;&gt;$text&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 修改後&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//$givenText = utf8_encode($text);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$givenText&lt;/span&gt; = &lt;span class=&quot;variable&quot;&gt;$text&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外範例中用來產生 word 的 PHP 也記得先改成 utf-8，之後即可輕鬆產生包含中文內容的 docx 檔～&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;至於該如何直接產生word供使用者一點擊就下載，方法我也都找到了，只是 Template 在 PHPWord 中的寫法與其他比較不一樣，因此方法也有被侷限住，一般的如 Basic Table 可以用以下方法來達到不存檔而下載，只要在最後 Save File 部分動一點手腳即可：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Save File&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$objWriter&lt;/span&gt; = PHPWord_IOFactory::createWriter(&lt;span class=&quot;variable&quot;&gt;$PHPWord&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Word2007&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 原本是儲存到當前目錄下，名為BasicTable.docx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// $objWriter-&amp;gt;save(&#39;BasicTable.docx&#39;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 先寫入header，再利用$objWriter-&amp;gt;save(&#39;php://output&#39;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 將結果直接show出來，即可成功進行下載動作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$filename&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&#39;abc.docx&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Cache-Control: public&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Content-Description: File Transfer&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Content-Disposition: attachment; filename=$filename&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Content-Type: application/octet-stream; &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Content-Transfer-Encoding: binary&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$objWriter&lt;/span&gt;-&amp;gt;save(&lt;span class=&quot;string&quot;&gt;&#39;php://output&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而 Template 無法使用上述方法，須使用下面範例才行：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Save File&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 原本是儲存到當前目錄下，名為Solarsystem.docx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// $document-&amp;gt;save(&#39;Solarsystem.docx&#39;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 先將檔案暫存起來&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$temp_file&lt;/span&gt; = tempnam(sys_get_temp_dir(), &lt;span class=&quot;string&quot;&gt;&#39;PHPWord&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$document&lt;/span&gt;-&amp;gt;save(&lt;span class=&quot;variable&quot;&gt;$temp_file&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 一樣是寫入header，但最後以不同指令呈現出來，最後再刪掉伺服器上的暫存檔&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$objWriter&lt;/span&gt; = PHPWord_IOFactory::createWriter(&lt;span class=&quot;variable&quot;&gt;$PHPWord&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;Word2007&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;$filename&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&#39;abc.docx&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Cache-Control: public&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Content-Description: File Transfer&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Content-Disposition: attachment; filename=$filename&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Content-Type: application/octet-stream; &quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;header(&lt;span class=&quot;string&quot;&gt;&quot;Content-Transfer-Encoding: binary&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;readfile(&lt;span class=&quot;variable&quot;&gt;$temp_file&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// or echo file_get_contents($temp_file);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unlink(&lt;span class=&quot;variable&quot;&gt;$temp_file&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// remove temp file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;到這裡我所需要的功能大致上齊全了，只剩下 PHPWord 沒辦法產生 word2003(*.doc) 的檔案，也是一個令人頭痛的問題。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;UPDATE 2016-06-24：&lt;/strong&gt;不曉得當初自己怎麼沒將這篇從 &lt;a href=&quot;http://northzo.blogspot.tw/2012/09/phpword.html&quot; target=&quot;_blank&quot; rel=&quot;external
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="PHP" scheme="http://ssk7833.github.io/blog/tags/PHP/"/>
    
      <category term="PHPWord" scheme="http://ssk7833.github.io/blog/tags/PHPWord/"/>
    
  </entry>
  
  <entry>
    <title>將 cd 跟 ls 合併為一個指令</title>
    <link href="http://ssk7833.github.io/blog/2011/01/18/combine-cd-and-ls-into-one-command/"/>
    <id>http://ssk7833.github.io/blog/2011/01/18/combine-cd-and-ls-into-one-command/</id>
    <published>2011-01-17T17:45:05.000Z</published>
    <updated>2016-01-07T16:47:05.000Z</updated>
    
    <content type="html">&lt;p&gt;用 alias, script, unix programing 都無法達到更換資料夾後並印出資料夾內容的功能&lt;br&gt;最後測試只有 function 可以。&lt;/p&gt;
&lt;p&gt;若是 bash shell，將 .bashrc 增加下列程式碼後重新載入 .bashrc 即可。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cds() { cd &amp;quot;$1&amp;quot;; ls; }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接著只要執行 cds 指令即可。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;用 alias, script, unix programing 都無法達到更換資料夾後並印出資料夾內容的功能&lt;br&gt;最後測試只有 function 可以。&lt;/p&gt;
&lt;p&gt;若是 bash shell，將 .bashrc 增加下列程式碼後重新載入 .bashrc 即可。&lt;/p
    
    </summary>
    
      <category term="study" scheme="http://ssk7833.github.io/blog/categories/study/"/>
    
    
      <category term="shell script" scheme="http://ssk7833.github.io/blog/tags/shell-script/"/>
    
  </entry>
  
</feed>
